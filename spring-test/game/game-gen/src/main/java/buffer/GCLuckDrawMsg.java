// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GCLuckDrawMsg.proto

package buffer;

public final class GCLuckDrawMsg {
  private GCLuckDrawMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RewardProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 UnitType = 1;
    boolean hasUnitType();
    int getUnitType();
    
    // optional int32 unitId = 2;
    boolean hasUnitId();
    int getUnitId();
    
    // optional int32 num = 3;
    boolean hasNum();
    int getNum();
    
    // optional string ext = 4;
    boolean hasExt();
    String getExt();
  }
  public static final class RewardProto extends
      com.google.protobuf.GeneratedMessage
      implements RewardProtoOrBuilder {
    // Use RewardProto.newBuilder() to construct.
    private RewardProto(Builder builder) {
      super(builder);
    }
    private RewardProto(boolean noInit) {}
    
    private static final RewardProto defaultInstance;
    public static RewardProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public RewardProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCLuckDrawMsg.internal_static_buffer_RewardProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCLuckDrawMsg.internal_static_buffer_RewardProto_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 UnitType = 1;
    public static final int UNITTYPE_FIELD_NUMBER = 1;
    private int unitType_;
    public boolean hasUnitType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getUnitType() {
      return unitType_;
    }
    
    // optional int32 unitId = 2;
    public static final int UNITID_FIELD_NUMBER = 2;
    private int unitId_;
    public boolean hasUnitId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getUnitId() {
      return unitId_;
    }
    
    // optional int32 num = 3;
    public static final int NUM_FIELD_NUMBER = 3;
    private int num_;
    public boolean hasNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getNum() {
      return num_;
    }
    
    // optional string ext = 4;
    public static final int EXT_FIELD_NUMBER = 4;
    private java.lang.Object ext_;
    public boolean hasExt() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getExt() {
      java.lang.Object ref = ext_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ext_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getExtBytes() {
      java.lang.Object ref = ext_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ext_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      unitType_ = 0;
      unitId_ = 0;
      num_ = 0;
      ext_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, unitType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, unitId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, num_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getExtBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, unitType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, unitId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, num_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getExtBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCLuckDrawMsg.RewardProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCLuckDrawMsg.RewardProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCLuckDrawMsg.RewardProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCLuckDrawMsg.RewardProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCLuckDrawMsg.RewardProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCLuckDrawMsg.RewardProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCLuckDrawMsg.RewardProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCLuckDrawMsg.RewardProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCLuckDrawMsg.RewardProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCLuckDrawMsg.RewardProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCLuckDrawMsg.RewardProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCLuckDrawMsg.RewardProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCLuckDrawMsg.internal_static_buffer_RewardProto_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCLuckDrawMsg.internal_static_buffer_RewardProto_fieldAccessorTable;
      }
      
      // Construct using buffer.GCLuckDrawMsg.RewardProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        unitType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        unitId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        num_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        ext_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCLuckDrawMsg.RewardProto.getDescriptor();
      }
      
      public buffer.GCLuckDrawMsg.RewardProto getDefaultInstanceForType() {
        return buffer.GCLuckDrawMsg.RewardProto.getDefaultInstance();
      }
      
      public buffer.GCLuckDrawMsg.RewardProto build() {
        buffer.GCLuckDrawMsg.RewardProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCLuckDrawMsg.RewardProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCLuckDrawMsg.RewardProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCLuckDrawMsg.RewardProto buildPartial() {
        buffer.GCLuckDrawMsg.RewardProto result = new buffer.GCLuckDrawMsg.RewardProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unitType_ = unitType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.unitId_ = unitId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.num_ = num_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ext_ = ext_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCLuckDrawMsg.RewardProto) {
          return mergeFrom((buffer.GCLuckDrawMsg.RewardProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCLuckDrawMsg.RewardProto other) {
        if (other == buffer.GCLuckDrawMsg.RewardProto.getDefaultInstance()) return this;
        if (other.hasUnitType()) {
          setUnitType(other.getUnitType());
        }
        if (other.hasUnitId()) {
          setUnitId(other.getUnitId());
        }
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        if (other.hasExt()) {
          setExt(other.getExt());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              unitType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              unitId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              num_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              ext_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 UnitType = 1;
      private int unitType_ ;
      public boolean hasUnitType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getUnitType() {
        return unitType_;
      }
      public Builder setUnitType(int value) {
        bitField0_ |= 0x00000001;
        unitType_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnitType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unitType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 unitId = 2;
      private int unitId_ ;
      public boolean hasUnitId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getUnitId() {
        return unitId_;
      }
      public Builder setUnitId(int value) {
        bitField0_ |= 0x00000002;
        unitId_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnitId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        unitId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 num = 3;
      private int num_ ;
      public boolean hasNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getNum() {
        return num_;
      }
      public Builder setNum(int value) {
        bitField0_ |= 0x00000004;
        num_ = value;
        onChanged();
        return this;
      }
      public Builder clearNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        num_ = 0;
        onChanged();
        return this;
      }
      
      // optional string ext = 4;
      private java.lang.Object ext_ = "";
      public boolean hasExt() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getExt() {
        java.lang.Object ref = ext_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ext_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setExt(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        ext_ = value;
        onChanged();
        return this;
      }
      public Builder clearExt() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ext_ = getDefaultInstance().getExt();
        onChanged();
        return this;
      }
      void setExt(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        ext_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.RewardProto)
    }
    
    static {
      defaultInstance = new RewardProto(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.RewardProto)
  }
  
  public interface GCLuckDrawMsgProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 msgType = 1 [default = 3317];
    boolean hasMsgType();
    int getMsgType();
    
    // optional int32 status = 2;
    boolean hasStatus();
    int getStatus();
    
    // optional int32 type = 3;
    boolean hasType();
    int getType();
    
    // repeated .buffer.RewardProto rewards = 4;
    java.util.List<buffer.GCLuckDrawMsg.RewardProto> 
        getRewardsList();
    buffer.GCLuckDrawMsg.RewardProto getRewards(int index);
    int getRewardsCount();
    java.util.List<? extends buffer.GCLuckDrawMsg.RewardProtoOrBuilder> 
        getRewardsOrBuilderList();
    buffer.GCLuckDrawMsg.RewardProtoOrBuilder getRewardsOrBuilder(
        int index);
    
    // optional int32 currLuckNum = 5;
    boolean hasCurrLuckNum();
    int getCurrLuckNum();
    
    // optional int64 nextFreeTime = 6;
    boolean hasNextFreeTime();
    long getNextFreeTime();
    
    // optional bool isDouble = 7;
    boolean hasIsDouble();
    boolean getIsDouble();
    
    // optional string cash = 8;
    boolean hasCash();
    String getCash();
    
    // optional int32 luckDrawNum = 9;
    boolean hasLuckDrawNum();
    int getLuckDrawNum();
  }
  public static final class GCLuckDrawMsgProto extends
      com.google.protobuf.GeneratedMessage
      implements GCLuckDrawMsgProtoOrBuilder {
    // Use GCLuckDrawMsgProto.newBuilder() to construct.
    private GCLuckDrawMsgProto(Builder builder) {
      super(builder);
    }
    private GCLuckDrawMsgProto(boolean noInit) {}
    
    private static final GCLuckDrawMsgProto defaultInstance;
    public static GCLuckDrawMsgProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public GCLuckDrawMsgProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCLuckDrawMsg.internal_static_buffer_GCLuckDrawMsgProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCLuckDrawMsg.internal_static_buffer_GCLuckDrawMsgProto_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 msgType = 1 [default = 3317];
    public static final int MSGTYPE_FIELD_NUMBER = 1;
    private int msgType_;
    public boolean hasMsgType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getMsgType() {
      return msgType_;
    }
    
    // optional int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional int32 type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getType() {
      return type_;
    }
    
    // repeated .buffer.RewardProto rewards = 4;
    public static final int REWARDS_FIELD_NUMBER = 4;
    private java.util.List<buffer.GCLuckDrawMsg.RewardProto> rewards_;
    public java.util.List<buffer.GCLuckDrawMsg.RewardProto> getRewardsList() {
      return rewards_;
    }
    public java.util.List<? extends buffer.GCLuckDrawMsg.RewardProtoOrBuilder> 
        getRewardsOrBuilderList() {
      return rewards_;
    }
    public int getRewardsCount() {
      return rewards_.size();
    }
    public buffer.GCLuckDrawMsg.RewardProto getRewards(int index) {
      return rewards_.get(index);
    }
    public buffer.GCLuckDrawMsg.RewardProtoOrBuilder getRewardsOrBuilder(
        int index) {
      return rewards_.get(index);
    }
    
    // optional int32 currLuckNum = 5;
    public static final int CURRLUCKNUM_FIELD_NUMBER = 5;
    private int currLuckNum_;
    public boolean hasCurrLuckNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getCurrLuckNum() {
      return currLuckNum_;
    }
    
    // optional int64 nextFreeTime = 6;
    public static final int NEXTFREETIME_FIELD_NUMBER = 6;
    private long nextFreeTime_;
    public boolean hasNextFreeTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public long getNextFreeTime() {
      return nextFreeTime_;
    }
    
    // optional bool isDouble = 7;
    public static final int ISDOUBLE_FIELD_NUMBER = 7;
    private boolean isDouble_;
    public boolean hasIsDouble() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getIsDouble() {
      return isDouble_;
    }
    
    // optional string cash = 8;
    public static final int CASH_FIELD_NUMBER = 8;
    private java.lang.Object cash_;
    public boolean hasCash() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getCash() {
      java.lang.Object ref = cash_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          cash_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCashBytes() {
      java.lang.Object ref = cash_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        cash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 luckDrawNum = 9;
    public static final int LUCKDRAWNUM_FIELD_NUMBER = 9;
    private int luckDrawNum_;
    public boolean hasLuckDrawNum() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getLuckDrawNum() {
      return luckDrawNum_;
    }
    
    private void initFields() {
      msgType_ = 3317;
      status_ = 0;
      type_ = 0;
      rewards_ = java.util.Collections.emptyList();
      currLuckNum_ = 0;
      nextFreeTime_ = 0L;
      isDouble_ = false;
      cash_ = "";
      luckDrawNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, msgType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, type_);
      }
      for (int i = 0; i < rewards_.size(); i++) {
        output.writeMessage(4, rewards_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, currLuckNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(6, nextFreeTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(7, isDouble_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(8, getCashBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, luckDrawNum_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, msgType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, type_);
      }
      for (int i = 0; i < rewards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, rewards_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, currLuckNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, nextFreeTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isDouble_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getCashBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, luckDrawNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCLuckDrawMsg.GCLuckDrawMsgProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCLuckDrawMsg.GCLuckDrawMsgProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCLuckDrawMsg.GCLuckDrawMsgProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCLuckDrawMsg.GCLuckDrawMsgProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCLuckDrawMsg.GCLuckDrawMsgProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCLuckDrawMsg.GCLuckDrawMsgProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCLuckDrawMsg.GCLuckDrawMsgProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCLuckDrawMsg.GCLuckDrawMsgProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCLuckDrawMsg.GCLuckDrawMsgProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCLuckDrawMsg.GCLuckDrawMsgProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCLuckDrawMsg.GCLuckDrawMsgProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCLuckDrawMsg.GCLuckDrawMsgProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCLuckDrawMsg.internal_static_buffer_GCLuckDrawMsgProto_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCLuckDrawMsg.internal_static_buffer_GCLuckDrawMsgProto_fieldAccessorTable;
      }
      
      // Construct using buffer.GCLuckDrawMsg.GCLuckDrawMsgProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRewardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        msgType_ = 3317;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (rewardsBuilder_ == null) {
          rewards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rewardsBuilder_.clear();
        }
        currLuckNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        nextFreeTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        isDouble_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        cash_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        luckDrawNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCLuckDrawMsg.GCLuckDrawMsgProto.getDescriptor();
      }
      
      public buffer.GCLuckDrawMsg.GCLuckDrawMsgProto getDefaultInstanceForType() {
        return buffer.GCLuckDrawMsg.GCLuckDrawMsgProto.getDefaultInstance();
      }
      
      public buffer.GCLuckDrawMsg.GCLuckDrawMsgProto build() {
        buffer.GCLuckDrawMsg.GCLuckDrawMsgProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCLuckDrawMsg.GCLuckDrawMsgProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCLuckDrawMsg.GCLuckDrawMsgProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCLuckDrawMsg.GCLuckDrawMsgProto buildPartial() {
        buffer.GCLuckDrawMsg.GCLuckDrawMsgProto result = new buffer.GCLuckDrawMsg.GCLuckDrawMsgProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgType_ = msgType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (rewardsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            rewards_ = java.util.Collections.unmodifiableList(rewards_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.rewards_ = rewards_;
        } else {
          result.rewards_ = rewardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.currLuckNum_ = currLuckNum_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nextFreeTime_ = nextFreeTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isDouble_ = isDouble_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.cash_ = cash_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.luckDrawNum_ = luckDrawNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCLuckDrawMsg.GCLuckDrawMsgProto) {
          return mergeFrom((buffer.GCLuckDrawMsg.GCLuckDrawMsgProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCLuckDrawMsg.GCLuckDrawMsgProto other) {
        if (other == buffer.GCLuckDrawMsg.GCLuckDrawMsgProto.getDefaultInstance()) return this;
        if (other.hasMsgType()) {
          setMsgType(other.getMsgType());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (rewardsBuilder_ == null) {
          if (!other.rewards_.isEmpty()) {
            if (rewards_.isEmpty()) {
              rewards_ = other.rewards_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRewardsIsMutable();
              rewards_.addAll(other.rewards_);
            }
            onChanged();
          }
        } else {
          if (!other.rewards_.isEmpty()) {
            if (rewardsBuilder_.isEmpty()) {
              rewardsBuilder_.dispose();
              rewardsBuilder_ = null;
              rewards_ = other.rewards_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rewardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRewardsFieldBuilder() : null;
            } else {
              rewardsBuilder_.addAllMessages(other.rewards_);
            }
          }
        }
        if (other.hasCurrLuckNum()) {
          setCurrLuckNum(other.getCurrLuckNum());
        }
        if (other.hasNextFreeTime()) {
          setNextFreeTime(other.getNextFreeTime());
        }
        if (other.hasIsDouble()) {
          setIsDouble(other.getIsDouble());
        }
        if (other.hasCash()) {
          setCash(other.getCash());
        }
        if (other.hasLuckDrawNum()) {
          setLuckDrawNum(other.getLuckDrawNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              msgType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              type_ = input.readInt32();
              break;
            }
            case 34: {
              buffer.GCLuckDrawMsg.RewardProto.Builder subBuilder = buffer.GCLuckDrawMsg.RewardProto.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRewards(subBuilder.buildPartial());
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              currLuckNum_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              nextFreeTime_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              isDouble_ = input.readBool();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              cash_ = input.readBytes();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              luckDrawNum_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 msgType = 1 [default = 3317];
      private int msgType_ = 3317;
      public boolean hasMsgType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getMsgType() {
        return msgType_;
      }
      public Builder setMsgType(int value) {
        bitField0_ |= 0x00000001;
        msgType_ = value;
        onChanged();
        return this;
      }
      public Builder clearMsgType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgType_ = 3317;
        onChanged();
        return this;
      }
      
      // optional int32 status = 2;
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 type = 3;
      private int type_ ;
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getType() {
        return type_;
      }
      public Builder setType(int value) {
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .buffer.RewardProto rewards = 4;
      private java.util.List<buffer.GCLuckDrawMsg.RewardProto> rewards_ =
        java.util.Collections.emptyList();
      private void ensureRewardsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          rewards_ = new java.util.ArrayList<buffer.GCLuckDrawMsg.RewardProto>(rewards_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCLuckDrawMsg.RewardProto, buffer.GCLuckDrawMsg.RewardProto.Builder, buffer.GCLuckDrawMsg.RewardProtoOrBuilder> rewardsBuilder_;
      
      public java.util.List<buffer.GCLuckDrawMsg.RewardProto> getRewardsList() {
        if (rewardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rewards_);
        } else {
          return rewardsBuilder_.getMessageList();
        }
      }
      public int getRewardsCount() {
        if (rewardsBuilder_ == null) {
          return rewards_.size();
        } else {
          return rewardsBuilder_.getCount();
        }
      }
      public buffer.GCLuckDrawMsg.RewardProto getRewards(int index) {
        if (rewardsBuilder_ == null) {
          return rewards_.get(index);
        } else {
          return rewardsBuilder_.getMessage(index);
        }
      }
      public Builder setRewards(
          int index, buffer.GCLuckDrawMsg.RewardProto value) {
        if (rewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardsIsMutable();
          rewards_.set(index, value);
          onChanged();
        } else {
          rewardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRewards(
          int index, buffer.GCLuckDrawMsg.RewardProto.Builder builderForValue) {
        if (rewardsBuilder_ == null) {
          ensureRewardsIsMutable();
          rewards_.set(index, builderForValue.build());
          onChanged();
        } else {
          rewardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRewards(buffer.GCLuckDrawMsg.RewardProto value) {
        if (rewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardsIsMutable();
          rewards_.add(value);
          onChanged();
        } else {
          rewardsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRewards(
          int index, buffer.GCLuckDrawMsg.RewardProto value) {
        if (rewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardsIsMutable();
          rewards_.add(index, value);
          onChanged();
        } else {
          rewardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRewards(
          buffer.GCLuckDrawMsg.RewardProto.Builder builderForValue) {
        if (rewardsBuilder_ == null) {
          ensureRewardsIsMutable();
          rewards_.add(builderForValue.build());
          onChanged();
        } else {
          rewardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRewards(
          int index, buffer.GCLuckDrawMsg.RewardProto.Builder builderForValue) {
        if (rewardsBuilder_ == null) {
          ensureRewardsIsMutable();
          rewards_.add(index, builderForValue.build());
          onChanged();
        } else {
          rewardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRewards(
          java.lang.Iterable<? extends buffer.GCLuckDrawMsg.RewardProto> values) {
        if (rewardsBuilder_ == null) {
          ensureRewardsIsMutable();
          super.addAll(values, rewards_);
          onChanged();
        } else {
          rewardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRewards() {
        if (rewardsBuilder_ == null) {
          rewards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rewardsBuilder_.clear();
        }
        return this;
      }
      public Builder removeRewards(int index) {
        if (rewardsBuilder_ == null) {
          ensureRewardsIsMutable();
          rewards_.remove(index);
          onChanged();
        } else {
          rewardsBuilder_.remove(index);
        }
        return this;
      }
      public buffer.GCLuckDrawMsg.RewardProto.Builder getRewardsBuilder(
          int index) {
        return getRewardsFieldBuilder().getBuilder(index);
      }
      public buffer.GCLuckDrawMsg.RewardProtoOrBuilder getRewardsOrBuilder(
          int index) {
        if (rewardsBuilder_ == null) {
          return rewards_.get(index);  } else {
          return rewardsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends buffer.GCLuckDrawMsg.RewardProtoOrBuilder> 
           getRewardsOrBuilderList() {
        if (rewardsBuilder_ != null) {
          return rewardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rewards_);
        }
      }
      public buffer.GCLuckDrawMsg.RewardProto.Builder addRewardsBuilder() {
        return getRewardsFieldBuilder().addBuilder(
            buffer.GCLuckDrawMsg.RewardProto.getDefaultInstance());
      }
      public buffer.GCLuckDrawMsg.RewardProto.Builder addRewardsBuilder(
          int index) {
        return getRewardsFieldBuilder().addBuilder(
            index, buffer.GCLuckDrawMsg.RewardProto.getDefaultInstance());
      }
      public java.util.List<buffer.GCLuckDrawMsg.RewardProto.Builder> 
           getRewardsBuilderList() {
        return getRewardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCLuckDrawMsg.RewardProto, buffer.GCLuckDrawMsg.RewardProto.Builder, buffer.GCLuckDrawMsg.RewardProtoOrBuilder> 
          getRewardsFieldBuilder() {
        if (rewardsBuilder_ == null) {
          rewardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              buffer.GCLuckDrawMsg.RewardProto, buffer.GCLuckDrawMsg.RewardProto.Builder, buffer.GCLuckDrawMsg.RewardProtoOrBuilder>(
                  rewards_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          rewards_ = null;
        }
        return rewardsBuilder_;
      }
      
      // optional int32 currLuckNum = 5;
      private int currLuckNum_ ;
      public boolean hasCurrLuckNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getCurrLuckNum() {
        return currLuckNum_;
      }
      public Builder setCurrLuckNum(int value) {
        bitField0_ |= 0x00000010;
        currLuckNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearCurrLuckNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        currLuckNum_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 nextFreeTime = 6;
      private long nextFreeTime_ ;
      public boolean hasNextFreeTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public long getNextFreeTime() {
        return nextFreeTime_;
      }
      public Builder setNextFreeTime(long value) {
        bitField0_ |= 0x00000020;
        nextFreeTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearNextFreeTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        nextFreeTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional bool isDouble = 7;
      private boolean isDouble_ ;
      public boolean hasIsDouble() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public boolean getIsDouble() {
        return isDouble_;
      }
      public Builder setIsDouble(boolean value) {
        bitField0_ |= 0x00000040;
        isDouble_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsDouble() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isDouble_ = false;
        onChanged();
        return this;
      }
      
      // optional string cash = 8;
      private java.lang.Object cash_ = "";
      public boolean hasCash() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getCash() {
        java.lang.Object ref = cash_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          cash_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCash(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        cash_ = value;
        onChanged();
        return this;
      }
      public Builder clearCash() {
        bitField0_ = (bitField0_ & ~0x00000080);
        cash_ = getDefaultInstance().getCash();
        onChanged();
        return this;
      }
      void setCash(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        cash_ = value;
        onChanged();
      }
      
      // optional int32 luckDrawNum = 9;
      private int luckDrawNum_ ;
      public boolean hasLuckDrawNum() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getLuckDrawNum() {
        return luckDrawNum_;
      }
      public Builder setLuckDrawNum(int value) {
        bitField0_ |= 0x00000100;
        luckDrawNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearLuckDrawNum() {
        bitField0_ = (bitField0_ & ~0x00000100);
        luckDrawNum_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.GCLuckDrawMsgProto)
    }
    
    static {
      defaultInstance = new GCLuckDrawMsgProto(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.GCLuckDrawMsgProto)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_RewardProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_RewardProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_GCLuckDrawMsgProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_GCLuckDrawMsgProto_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023GCLuckDrawMsg.proto\022\006buffer\"I\n\013RewardP" +
      "roto\022\020\n\010UnitType\030\001 \001(\005\022\016\n\006unitId\030\002 \001(\005\022\013" +
      "\n\003num\030\003 \001(\005\022\013\n\003ext\030\004 \001(\t\"\317\001\n\022GCLuckDrawM" +
      "sgProto\022\025\n\007msgType\030\001 \001(\005:\0043317\022\016\n\006status" +
      "\030\002 \001(\005\022\014\n\004type\030\003 \001(\005\022$\n\007rewards\030\004 \003(\0132\023." +
      "buffer.RewardProto\022\023\n\013currLuckNum\030\005 \001(\005\022" +
      "\024\n\014nextFreeTime\030\006 \001(\003\022\020\n\010isDouble\030\007 \001(\010\022" +
      "\014\n\004cash\030\010 \001(\t\022\023\n\013luckDrawNum\030\t \001(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_buffer_RewardProto_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_buffer_RewardProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_RewardProto_descriptor,
              new java.lang.String[] { "UnitType", "UnitId", "Num", "Ext", },
              buffer.GCLuckDrawMsg.RewardProto.class,
              buffer.GCLuckDrawMsg.RewardProto.Builder.class);
          internal_static_buffer_GCLuckDrawMsgProto_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_buffer_GCLuckDrawMsgProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_GCLuckDrawMsgProto_descriptor,
              new java.lang.String[] { "MsgType", "Status", "Type", "Rewards", "CurrLuckNum", "NextFreeTime", "IsDouble", "Cash", "LuckDrawNum", },
              buffer.GCLuckDrawMsg.GCLuckDrawMsgProto.class,
              buffer.GCLuckDrawMsg.GCLuckDrawMsgProto.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
