// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GCBattlePveResult.proto

package buffer;

public final class GCBattlePveResult {
  private GCBattlePveResult() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ScoreInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 scoreType = 1;
    boolean hasScoreType();
    int getScoreType();
    
    // optional int32 score = 2;
    boolean hasScore();
    int getScore();
  }
  public static final class ScoreInfo extends
      com.google.protobuf.GeneratedMessage
      implements ScoreInfoOrBuilder {
    // Use ScoreInfo.newBuilder() to construct.
    private ScoreInfo(Builder builder) {
      super(builder);
    }
    private ScoreInfo(boolean noInit) {}
    
    private static final ScoreInfo defaultInstance;
    public static ScoreInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public ScoreInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCBattlePveResult.internal_static_buffer_ScoreInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCBattlePveResult.internal_static_buffer_ScoreInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 scoreType = 1;
    public static final int SCORETYPE_FIELD_NUMBER = 1;
    private int scoreType_;
    public boolean hasScoreType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getScoreType() {
      return scoreType_;
    }
    
    // optional int32 score = 2;
    public static final int SCORE_FIELD_NUMBER = 2;
    private int score_;
    public boolean hasScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getScore() {
      return score_;
    }
    
    private void initFields() {
      scoreType_ = 0;
      score_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, scoreType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, score_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, scoreType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, score_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCBattlePveResult.ScoreInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCBattlePveResult.ScoreInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveResult.ScoreInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCBattlePveResult.ScoreInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveResult.ScoreInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCBattlePveResult.ScoreInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveResult.ScoreInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCBattlePveResult.ScoreInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCBattlePveResult.ScoreInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCBattlePveResult.ScoreInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCBattlePveResult.ScoreInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCBattlePveResult.ScoreInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCBattlePveResult.internal_static_buffer_ScoreInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCBattlePveResult.internal_static_buffer_ScoreInfo_fieldAccessorTable;
      }
      
      // Construct using buffer.GCBattlePveResult.ScoreInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        scoreType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCBattlePveResult.ScoreInfo.getDescriptor();
      }
      
      public buffer.GCBattlePveResult.ScoreInfo getDefaultInstanceForType() {
        return buffer.GCBattlePveResult.ScoreInfo.getDefaultInstance();
      }
      
      public buffer.GCBattlePveResult.ScoreInfo build() {
        buffer.GCBattlePveResult.ScoreInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCBattlePveResult.ScoreInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCBattlePveResult.ScoreInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCBattlePveResult.ScoreInfo buildPartial() {
        buffer.GCBattlePveResult.ScoreInfo result = new buffer.GCBattlePveResult.ScoreInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.scoreType_ = scoreType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.score_ = score_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCBattlePveResult.ScoreInfo) {
          return mergeFrom((buffer.GCBattlePveResult.ScoreInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCBattlePveResult.ScoreInfo other) {
        if (other == buffer.GCBattlePveResult.ScoreInfo.getDefaultInstance()) return this;
        if (other.hasScoreType()) {
          setScoreType(other.getScoreType());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              scoreType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              score_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 scoreType = 1;
      private int scoreType_ ;
      public boolean hasScoreType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getScoreType() {
        return scoreType_;
      }
      public Builder setScoreType(int value) {
        bitField0_ |= 0x00000001;
        scoreType_ = value;
        onChanged();
        return this;
      }
      public Builder clearScoreType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        scoreType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 score = 2;
      private int score_ ;
      public boolean hasScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getScore() {
        return score_;
      }
      public Builder setScore(int value) {
        bitField0_ |= 0x00000002;
        score_ = value;
        onChanged();
        return this;
      }
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        score_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.ScoreInfo)
    }
    
    static {
      defaultInstance = new ScoreInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.ScoreInfo)
  }
  
  public interface ItemProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 itemType = 1;
    boolean hasItemType();
    int getItemType();
    
    // optional int32 itemId = 2;
    boolean hasItemId();
    int getItemId();
    
    // optional int32 itemNum = 3;
    boolean hasItemNum();
    int getItemNum();
  }
  public static final class ItemProto extends
      com.google.protobuf.GeneratedMessage
      implements ItemProtoOrBuilder {
    // Use ItemProto.newBuilder() to construct.
    private ItemProto(Builder builder) {
      super(builder);
    }
    private ItemProto(boolean noInit) {}
    
    private static final ItemProto defaultInstance;
    public static ItemProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public ItemProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCBattlePveResult.internal_static_buffer_ItemProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCBattlePveResult.internal_static_buffer_ItemProto_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 itemType = 1;
    public static final int ITEMTYPE_FIELD_NUMBER = 1;
    private int itemType_;
    public boolean hasItemType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getItemType() {
      return itemType_;
    }
    
    // optional int32 itemId = 2;
    public static final int ITEMID_FIELD_NUMBER = 2;
    private int itemId_;
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getItemId() {
      return itemId_;
    }
    
    // optional int32 itemNum = 3;
    public static final int ITEMNUM_FIELD_NUMBER = 3;
    private int itemNum_;
    public boolean hasItemNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getItemNum() {
      return itemNum_;
    }
    
    private void initFields() {
      itemType_ = 0;
      itemId_ = 0;
      itemNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, itemType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, itemId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, itemNum_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, itemType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, itemId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, itemNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCBattlePveResult.ItemProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCBattlePveResult.ItemProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveResult.ItemProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCBattlePveResult.ItemProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveResult.ItemProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCBattlePveResult.ItemProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveResult.ItemProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCBattlePveResult.ItemProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCBattlePveResult.ItemProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCBattlePveResult.ItemProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCBattlePveResult.ItemProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCBattlePveResult.ItemProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCBattlePveResult.internal_static_buffer_ItemProto_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCBattlePveResult.internal_static_buffer_ItemProto_fieldAccessorTable;
      }
      
      // Construct using buffer.GCBattlePveResult.ItemProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        itemType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        itemNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCBattlePveResult.ItemProto.getDescriptor();
      }
      
      public buffer.GCBattlePveResult.ItemProto getDefaultInstanceForType() {
        return buffer.GCBattlePveResult.ItemProto.getDefaultInstance();
      }
      
      public buffer.GCBattlePveResult.ItemProto build() {
        buffer.GCBattlePveResult.ItemProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCBattlePveResult.ItemProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCBattlePveResult.ItemProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCBattlePveResult.ItemProto buildPartial() {
        buffer.GCBattlePveResult.ItemProto result = new buffer.GCBattlePveResult.ItemProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemType_ = itemType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.itemNum_ = itemNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCBattlePveResult.ItemProto) {
          return mergeFrom((buffer.GCBattlePveResult.ItemProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCBattlePveResult.ItemProto other) {
        if (other == buffer.GCBattlePveResult.ItemProto.getDefaultInstance()) return this;
        if (other.hasItemType()) {
          setItemType(other.getItemType());
        }
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        if (other.hasItemNum()) {
          setItemNum(other.getItemNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              itemType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              itemNum_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 itemType = 1;
      private int itemType_ ;
      public boolean hasItemType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getItemType() {
        return itemType_;
      }
      public Builder setItemType(int value) {
        bitField0_ |= 0x00000001;
        itemType_ = value;
        onChanged();
        return this;
      }
      public Builder clearItemType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 itemId = 2;
      private int itemId_ ;
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getItemId() {
        return itemId_;
      }
      public Builder setItemId(int value) {
        bitField0_ |= 0x00000002;
        itemId_ = value;
        onChanged();
        return this;
      }
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 itemNum = 3;
      private int itemNum_ ;
      public boolean hasItemNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getItemNum() {
        return itemNum_;
      }
      public Builder setItemNum(int value) {
        bitField0_ |= 0x00000004;
        itemNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearItemNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        itemNum_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.ItemProto)
    }
    
    static {
      defaultInstance = new ItemProto(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.ItemProto)
  }
  
  public interface GCBattlePveResultProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 msgType = 1 [default = 25001];
    boolean hasMsgType();
    int getMsgType();
    
    // optional int32 status = 2;
    boolean hasStatus();
    int getStatus();
    
    // optional int32 result = 3;
    boolean hasResult();
    int getResult();
    
    // optional int32 targetId = 4;
    boolean hasTargetId();
    int getTargetId();
    
    // optional int32 nextTargetId = 5;
    boolean hasNextTargetId();
    int getNextTargetId();
    
    // repeated .buffer.ItemProto resultRewardItem = 6;
    java.util.List<buffer.GCBattlePveResult.ItemProto> 
        getResultRewardItemList();
    buffer.GCBattlePveResult.ItemProto getResultRewardItem(int index);
    int getResultRewardItemCount();
    java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
        getResultRewardItemOrBuilderList();
    buffer.GCBattlePveResult.ItemProtoOrBuilder getResultRewardItemOrBuilder(
        int index);
    
    // repeated .buffer.ItemProto stepRrewardItem = 7;
    java.util.List<buffer.GCBattlePveResult.ItemProto> 
        getStepRrewardItemList();
    buffer.GCBattlePveResult.ItemProto getStepRrewardItem(int index);
    int getStepRrewardItemCount();
    java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
        getStepRrewardItemOrBuilderList();
    buffer.GCBattlePveResult.ItemProtoOrBuilder getStepRrewardItemOrBuilder(
        int index);
    
    // repeated .buffer.ItemProto targetRrewardItem = 8;
    java.util.List<buffer.GCBattlePveResult.ItemProto> 
        getTargetRrewardItemList();
    buffer.GCBattlePveResult.ItemProto getTargetRrewardItem(int index);
    int getTargetRrewardItemCount();
    java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
        getTargetRrewardItemOrBuilderList();
    buffer.GCBattlePveResult.ItemProtoOrBuilder getTargetRrewardItemOrBuilder(
        int index);
    
    // repeated .buffer.ItemProto conWinRewardItem = 9;
    java.util.List<buffer.GCBattlePveResult.ItemProto> 
        getConWinRewardItemList();
    buffer.GCBattlePveResult.ItemProto getConWinRewardItem(int index);
    int getConWinRewardItemCount();
    java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
        getConWinRewardItemOrBuilderList();
    buffer.GCBattlePveResult.ItemProtoOrBuilder getConWinRewardItemOrBuilder(
        int index);
    
    // repeated .buffer.ItemProto dupRewardItem = 10;
    java.util.List<buffer.GCBattlePveResult.ItemProto> 
        getDupRewardItemList();
    buffer.GCBattlePveResult.ItemProto getDupRewardItem(int index);
    int getDupRewardItemCount();
    java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
        getDupRewardItemOrBuilderList();
    buffer.GCBattlePveResult.ItemProtoOrBuilder getDupRewardItemOrBuilder(
        int index);
    
    // optional int32 pveConWinNum = 12;
    boolean hasPveConWinNum();
    int getPveConWinNum();
    
    // optional int32 battleType = 13;
    boolean hasBattleType();
    int getBattleType();
    
    // optional int32 dupStar = 14;
    boolean hasDupStar();
    int getDupStar();
    
    // optional int32 dupScore = 15;
    boolean hasDupScore();
    int getDupScore();
    
    // repeated .buffer.ScoreInfo scoreInfo = 16;
    java.util.List<buffer.GCBattlePveResult.ScoreInfo> 
        getScoreInfoList();
    buffer.GCBattlePveResult.ScoreInfo getScoreInfo(int index);
    int getScoreInfoCount();
    java.util.List<? extends buffer.GCBattlePveResult.ScoreInfoOrBuilder> 
        getScoreInfoOrBuilderList();
    buffer.GCBattlePveResult.ScoreInfoOrBuilder getScoreInfoOrBuilder(
        int index);
    
    // optional int32 roleDupStar = 17;
    boolean hasRoleDupStar();
    int getRoleDupStar();
  }
  public static final class GCBattlePveResultProto extends
      com.google.protobuf.GeneratedMessage
      implements GCBattlePveResultProtoOrBuilder {
    // Use GCBattlePveResultProto.newBuilder() to construct.
    private GCBattlePveResultProto(Builder builder) {
      super(builder);
    }
    private GCBattlePveResultProto(boolean noInit) {}
    
    private static final GCBattlePveResultProto defaultInstance;
    public static GCBattlePveResultProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public GCBattlePveResultProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCBattlePveResult.internal_static_buffer_GCBattlePveResultProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCBattlePveResult.internal_static_buffer_GCBattlePveResultProto_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 msgType = 1 [default = 25001];
    public static final int MSGTYPE_FIELD_NUMBER = 1;
    private int msgType_;
    public boolean hasMsgType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getMsgType() {
      return msgType_;
    }
    
    // optional int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional int32 result = 3;
    public static final int RESULT_FIELD_NUMBER = 3;
    private int result_;
    public boolean hasResult() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getResult() {
      return result_;
    }
    
    // optional int32 targetId = 4;
    public static final int TARGETID_FIELD_NUMBER = 4;
    private int targetId_;
    public boolean hasTargetId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getTargetId() {
      return targetId_;
    }
    
    // optional int32 nextTargetId = 5;
    public static final int NEXTTARGETID_FIELD_NUMBER = 5;
    private int nextTargetId_;
    public boolean hasNextTargetId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getNextTargetId() {
      return nextTargetId_;
    }
    
    // repeated .buffer.ItemProto resultRewardItem = 6;
    public static final int RESULTREWARDITEM_FIELD_NUMBER = 6;
    private java.util.List<buffer.GCBattlePveResult.ItemProto> resultRewardItem_;
    public java.util.List<buffer.GCBattlePveResult.ItemProto> getResultRewardItemList() {
      return resultRewardItem_;
    }
    public java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
        getResultRewardItemOrBuilderList() {
      return resultRewardItem_;
    }
    public int getResultRewardItemCount() {
      return resultRewardItem_.size();
    }
    public buffer.GCBattlePveResult.ItemProto getResultRewardItem(int index) {
      return resultRewardItem_.get(index);
    }
    public buffer.GCBattlePveResult.ItemProtoOrBuilder getResultRewardItemOrBuilder(
        int index) {
      return resultRewardItem_.get(index);
    }
    
    // repeated .buffer.ItemProto stepRrewardItem = 7;
    public static final int STEPRREWARDITEM_FIELD_NUMBER = 7;
    private java.util.List<buffer.GCBattlePveResult.ItemProto> stepRrewardItem_;
    public java.util.List<buffer.GCBattlePveResult.ItemProto> getStepRrewardItemList() {
      return stepRrewardItem_;
    }
    public java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
        getStepRrewardItemOrBuilderList() {
      return stepRrewardItem_;
    }
    public int getStepRrewardItemCount() {
      return stepRrewardItem_.size();
    }
    public buffer.GCBattlePveResult.ItemProto getStepRrewardItem(int index) {
      return stepRrewardItem_.get(index);
    }
    public buffer.GCBattlePveResult.ItemProtoOrBuilder getStepRrewardItemOrBuilder(
        int index) {
      return stepRrewardItem_.get(index);
    }
    
    // repeated .buffer.ItemProto targetRrewardItem = 8;
    public static final int TARGETRREWARDITEM_FIELD_NUMBER = 8;
    private java.util.List<buffer.GCBattlePveResult.ItemProto> targetRrewardItem_;
    public java.util.List<buffer.GCBattlePveResult.ItemProto> getTargetRrewardItemList() {
      return targetRrewardItem_;
    }
    public java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
        getTargetRrewardItemOrBuilderList() {
      return targetRrewardItem_;
    }
    public int getTargetRrewardItemCount() {
      return targetRrewardItem_.size();
    }
    public buffer.GCBattlePveResult.ItemProto getTargetRrewardItem(int index) {
      return targetRrewardItem_.get(index);
    }
    public buffer.GCBattlePveResult.ItemProtoOrBuilder getTargetRrewardItemOrBuilder(
        int index) {
      return targetRrewardItem_.get(index);
    }
    
    // repeated .buffer.ItemProto conWinRewardItem = 9;
    public static final int CONWINREWARDITEM_FIELD_NUMBER = 9;
    private java.util.List<buffer.GCBattlePveResult.ItemProto> conWinRewardItem_;
    public java.util.List<buffer.GCBattlePveResult.ItemProto> getConWinRewardItemList() {
      return conWinRewardItem_;
    }
    public java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
        getConWinRewardItemOrBuilderList() {
      return conWinRewardItem_;
    }
    public int getConWinRewardItemCount() {
      return conWinRewardItem_.size();
    }
    public buffer.GCBattlePveResult.ItemProto getConWinRewardItem(int index) {
      return conWinRewardItem_.get(index);
    }
    public buffer.GCBattlePveResult.ItemProtoOrBuilder getConWinRewardItemOrBuilder(
        int index) {
      return conWinRewardItem_.get(index);
    }
    
    // repeated .buffer.ItemProto dupRewardItem = 10;
    public static final int DUPREWARDITEM_FIELD_NUMBER = 10;
    private java.util.List<buffer.GCBattlePveResult.ItemProto> dupRewardItem_;
    public java.util.List<buffer.GCBattlePveResult.ItemProto> getDupRewardItemList() {
      return dupRewardItem_;
    }
    public java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
        getDupRewardItemOrBuilderList() {
      return dupRewardItem_;
    }
    public int getDupRewardItemCount() {
      return dupRewardItem_.size();
    }
    public buffer.GCBattlePveResult.ItemProto getDupRewardItem(int index) {
      return dupRewardItem_.get(index);
    }
    public buffer.GCBattlePveResult.ItemProtoOrBuilder getDupRewardItemOrBuilder(
        int index) {
      return dupRewardItem_.get(index);
    }
    
    // optional int32 pveConWinNum = 12;
    public static final int PVECONWINNUM_FIELD_NUMBER = 12;
    private int pveConWinNum_;
    public boolean hasPveConWinNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getPveConWinNum() {
      return pveConWinNum_;
    }
    
    // optional int32 battleType = 13;
    public static final int BATTLETYPE_FIELD_NUMBER = 13;
    private int battleType_;
    public boolean hasBattleType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getBattleType() {
      return battleType_;
    }
    
    // optional int32 dupStar = 14;
    public static final int DUPSTAR_FIELD_NUMBER = 14;
    private int dupStar_;
    public boolean hasDupStar() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getDupStar() {
      return dupStar_;
    }
    
    // optional int32 dupScore = 15;
    public static final int DUPSCORE_FIELD_NUMBER = 15;
    private int dupScore_;
    public boolean hasDupScore() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getDupScore() {
      return dupScore_;
    }
    
    // repeated .buffer.ScoreInfo scoreInfo = 16;
    public static final int SCOREINFO_FIELD_NUMBER = 16;
    private java.util.List<buffer.GCBattlePveResult.ScoreInfo> scoreInfo_;
    public java.util.List<buffer.GCBattlePveResult.ScoreInfo> getScoreInfoList() {
      return scoreInfo_;
    }
    public java.util.List<? extends buffer.GCBattlePveResult.ScoreInfoOrBuilder> 
        getScoreInfoOrBuilderList() {
      return scoreInfo_;
    }
    public int getScoreInfoCount() {
      return scoreInfo_.size();
    }
    public buffer.GCBattlePveResult.ScoreInfo getScoreInfo(int index) {
      return scoreInfo_.get(index);
    }
    public buffer.GCBattlePveResult.ScoreInfoOrBuilder getScoreInfoOrBuilder(
        int index) {
      return scoreInfo_.get(index);
    }
    
    // optional int32 roleDupStar = 17;
    public static final int ROLEDUPSTAR_FIELD_NUMBER = 17;
    private int roleDupStar_;
    public boolean hasRoleDupStar() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getRoleDupStar() {
      return roleDupStar_;
    }
    
    private void initFields() {
      msgType_ = 25001;
      status_ = 0;
      result_ = 0;
      targetId_ = 0;
      nextTargetId_ = 0;
      resultRewardItem_ = java.util.Collections.emptyList();
      stepRrewardItem_ = java.util.Collections.emptyList();
      targetRrewardItem_ = java.util.Collections.emptyList();
      conWinRewardItem_ = java.util.Collections.emptyList();
      dupRewardItem_ = java.util.Collections.emptyList();
      pveConWinNum_ = 0;
      battleType_ = 0;
      dupStar_ = 0;
      dupScore_ = 0;
      scoreInfo_ = java.util.Collections.emptyList();
      roleDupStar_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, msgType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, result_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, targetId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, nextTargetId_);
      }
      for (int i = 0; i < resultRewardItem_.size(); i++) {
        output.writeMessage(6, resultRewardItem_.get(i));
      }
      for (int i = 0; i < stepRrewardItem_.size(); i++) {
        output.writeMessage(7, stepRrewardItem_.get(i));
      }
      for (int i = 0; i < targetRrewardItem_.size(); i++) {
        output.writeMessage(8, targetRrewardItem_.get(i));
      }
      for (int i = 0; i < conWinRewardItem_.size(); i++) {
        output.writeMessage(9, conWinRewardItem_.get(i));
      }
      for (int i = 0; i < dupRewardItem_.size(); i++) {
        output.writeMessage(10, dupRewardItem_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(12, pveConWinNum_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(13, battleType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(14, dupStar_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(15, dupScore_);
      }
      for (int i = 0; i < scoreInfo_.size(); i++) {
        output.writeMessage(16, scoreInfo_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(17, roleDupStar_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, msgType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, result_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, targetId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, nextTargetId_);
      }
      for (int i = 0; i < resultRewardItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, resultRewardItem_.get(i));
      }
      for (int i = 0; i < stepRrewardItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, stepRrewardItem_.get(i));
      }
      for (int i = 0; i < targetRrewardItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, targetRrewardItem_.get(i));
      }
      for (int i = 0; i < conWinRewardItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, conWinRewardItem_.get(i));
      }
      for (int i = 0; i < dupRewardItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, dupRewardItem_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, pveConWinNum_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, battleType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, dupStar_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, dupScore_);
      }
      for (int i = 0; i < scoreInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, scoreInfo_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, roleDupStar_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCBattlePveResult.GCBattlePveResultProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCBattlePveResult.GCBattlePveResultProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveResult.GCBattlePveResultProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCBattlePveResult.GCBattlePveResultProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveResult.GCBattlePveResultProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCBattlePveResult.GCBattlePveResultProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveResult.GCBattlePveResultProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCBattlePveResult.GCBattlePveResultProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCBattlePveResult.GCBattlePveResultProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCBattlePveResult.GCBattlePveResultProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCBattlePveResult.GCBattlePveResultProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCBattlePveResult.GCBattlePveResultProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCBattlePveResult.internal_static_buffer_GCBattlePveResultProto_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCBattlePveResult.internal_static_buffer_GCBattlePveResultProto_fieldAccessorTable;
      }
      
      // Construct using buffer.GCBattlePveResult.GCBattlePveResultProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getResultRewardItemFieldBuilder();
          getStepRrewardItemFieldBuilder();
          getTargetRrewardItemFieldBuilder();
          getConWinRewardItemFieldBuilder();
          getDupRewardItemFieldBuilder();
          getScoreInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        msgType_ = 25001;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        targetId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        nextTargetId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (resultRewardItemBuilder_ == null) {
          resultRewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          resultRewardItemBuilder_.clear();
        }
        if (stepRrewardItemBuilder_ == null) {
          stepRrewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          stepRrewardItemBuilder_.clear();
        }
        if (targetRrewardItemBuilder_ == null) {
          targetRrewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          targetRrewardItemBuilder_.clear();
        }
        if (conWinRewardItemBuilder_ == null) {
          conWinRewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          conWinRewardItemBuilder_.clear();
        }
        if (dupRewardItemBuilder_ == null) {
          dupRewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          dupRewardItemBuilder_.clear();
        }
        pveConWinNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        battleType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        dupStar_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        dupScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        if (scoreInfoBuilder_ == null) {
          scoreInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          scoreInfoBuilder_.clear();
        }
        roleDupStar_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCBattlePveResult.GCBattlePveResultProto.getDescriptor();
      }
      
      public buffer.GCBattlePveResult.GCBattlePveResultProto getDefaultInstanceForType() {
        return buffer.GCBattlePveResult.GCBattlePveResultProto.getDefaultInstance();
      }
      
      public buffer.GCBattlePveResult.GCBattlePveResultProto build() {
        buffer.GCBattlePveResult.GCBattlePveResultProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCBattlePveResult.GCBattlePveResultProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCBattlePveResult.GCBattlePveResultProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCBattlePveResult.GCBattlePveResultProto buildPartial() {
        buffer.GCBattlePveResult.GCBattlePveResultProto result = new buffer.GCBattlePveResult.GCBattlePveResultProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgType_ = msgType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.targetId_ = targetId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nextTargetId_ = nextTargetId_;
        if (resultRewardItemBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            resultRewardItem_ = java.util.Collections.unmodifiableList(resultRewardItem_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.resultRewardItem_ = resultRewardItem_;
        } else {
          result.resultRewardItem_ = resultRewardItemBuilder_.build();
        }
        if (stepRrewardItemBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            stepRrewardItem_ = java.util.Collections.unmodifiableList(stepRrewardItem_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.stepRrewardItem_ = stepRrewardItem_;
        } else {
          result.stepRrewardItem_ = stepRrewardItemBuilder_.build();
        }
        if (targetRrewardItemBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            targetRrewardItem_ = java.util.Collections.unmodifiableList(targetRrewardItem_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.targetRrewardItem_ = targetRrewardItem_;
        } else {
          result.targetRrewardItem_ = targetRrewardItemBuilder_.build();
        }
        if (conWinRewardItemBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            conWinRewardItem_ = java.util.Collections.unmodifiableList(conWinRewardItem_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.conWinRewardItem_ = conWinRewardItem_;
        } else {
          result.conWinRewardItem_ = conWinRewardItemBuilder_.build();
        }
        if (dupRewardItemBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            dupRewardItem_ = java.util.Collections.unmodifiableList(dupRewardItem_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.dupRewardItem_ = dupRewardItem_;
        } else {
          result.dupRewardItem_ = dupRewardItemBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000020;
        }
        result.pveConWinNum_ = pveConWinNum_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000040;
        }
        result.battleType_ = battleType_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.dupStar_ = dupStar_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.dupScore_ = dupScore_;
        if (scoreInfoBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            scoreInfo_ = java.util.Collections.unmodifiableList(scoreInfo_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.scoreInfo_ = scoreInfo_;
        } else {
          result.scoreInfo_ = scoreInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.roleDupStar_ = roleDupStar_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCBattlePveResult.GCBattlePveResultProto) {
          return mergeFrom((buffer.GCBattlePveResult.GCBattlePveResultProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCBattlePveResult.GCBattlePveResultProto other) {
        if (other == buffer.GCBattlePveResult.GCBattlePveResultProto.getDefaultInstance()) return this;
        if (other.hasMsgType()) {
          setMsgType(other.getMsgType());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasTargetId()) {
          setTargetId(other.getTargetId());
        }
        if (other.hasNextTargetId()) {
          setNextTargetId(other.getNextTargetId());
        }
        if (resultRewardItemBuilder_ == null) {
          if (!other.resultRewardItem_.isEmpty()) {
            if (resultRewardItem_.isEmpty()) {
              resultRewardItem_ = other.resultRewardItem_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureResultRewardItemIsMutable();
              resultRewardItem_.addAll(other.resultRewardItem_);
            }
            onChanged();
          }
        } else {
          if (!other.resultRewardItem_.isEmpty()) {
            if (resultRewardItemBuilder_.isEmpty()) {
              resultRewardItemBuilder_.dispose();
              resultRewardItemBuilder_ = null;
              resultRewardItem_ = other.resultRewardItem_;
              bitField0_ = (bitField0_ & ~0x00000020);
              resultRewardItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getResultRewardItemFieldBuilder() : null;
            } else {
              resultRewardItemBuilder_.addAllMessages(other.resultRewardItem_);
            }
          }
        }
        if (stepRrewardItemBuilder_ == null) {
          if (!other.stepRrewardItem_.isEmpty()) {
            if (stepRrewardItem_.isEmpty()) {
              stepRrewardItem_ = other.stepRrewardItem_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureStepRrewardItemIsMutable();
              stepRrewardItem_.addAll(other.stepRrewardItem_);
            }
            onChanged();
          }
        } else {
          if (!other.stepRrewardItem_.isEmpty()) {
            if (stepRrewardItemBuilder_.isEmpty()) {
              stepRrewardItemBuilder_.dispose();
              stepRrewardItemBuilder_ = null;
              stepRrewardItem_ = other.stepRrewardItem_;
              bitField0_ = (bitField0_ & ~0x00000040);
              stepRrewardItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStepRrewardItemFieldBuilder() : null;
            } else {
              stepRrewardItemBuilder_.addAllMessages(other.stepRrewardItem_);
            }
          }
        }
        if (targetRrewardItemBuilder_ == null) {
          if (!other.targetRrewardItem_.isEmpty()) {
            if (targetRrewardItem_.isEmpty()) {
              targetRrewardItem_ = other.targetRrewardItem_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureTargetRrewardItemIsMutable();
              targetRrewardItem_.addAll(other.targetRrewardItem_);
            }
            onChanged();
          }
        } else {
          if (!other.targetRrewardItem_.isEmpty()) {
            if (targetRrewardItemBuilder_.isEmpty()) {
              targetRrewardItemBuilder_.dispose();
              targetRrewardItemBuilder_ = null;
              targetRrewardItem_ = other.targetRrewardItem_;
              bitField0_ = (bitField0_ & ~0x00000080);
              targetRrewardItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTargetRrewardItemFieldBuilder() : null;
            } else {
              targetRrewardItemBuilder_.addAllMessages(other.targetRrewardItem_);
            }
          }
        }
        if (conWinRewardItemBuilder_ == null) {
          if (!other.conWinRewardItem_.isEmpty()) {
            if (conWinRewardItem_.isEmpty()) {
              conWinRewardItem_ = other.conWinRewardItem_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureConWinRewardItemIsMutable();
              conWinRewardItem_.addAll(other.conWinRewardItem_);
            }
            onChanged();
          }
        } else {
          if (!other.conWinRewardItem_.isEmpty()) {
            if (conWinRewardItemBuilder_.isEmpty()) {
              conWinRewardItemBuilder_.dispose();
              conWinRewardItemBuilder_ = null;
              conWinRewardItem_ = other.conWinRewardItem_;
              bitField0_ = (bitField0_ & ~0x00000100);
              conWinRewardItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getConWinRewardItemFieldBuilder() : null;
            } else {
              conWinRewardItemBuilder_.addAllMessages(other.conWinRewardItem_);
            }
          }
        }
        if (dupRewardItemBuilder_ == null) {
          if (!other.dupRewardItem_.isEmpty()) {
            if (dupRewardItem_.isEmpty()) {
              dupRewardItem_ = other.dupRewardItem_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureDupRewardItemIsMutable();
              dupRewardItem_.addAll(other.dupRewardItem_);
            }
            onChanged();
          }
        } else {
          if (!other.dupRewardItem_.isEmpty()) {
            if (dupRewardItemBuilder_.isEmpty()) {
              dupRewardItemBuilder_.dispose();
              dupRewardItemBuilder_ = null;
              dupRewardItem_ = other.dupRewardItem_;
              bitField0_ = (bitField0_ & ~0x00000200);
              dupRewardItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDupRewardItemFieldBuilder() : null;
            } else {
              dupRewardItemBuilder_.addAllMessages(other.dupRewardItem_);
            }
          }
        }
        if (other.hasPveConWinNum()) {
          setPveConWinNum(other.getPveConWinNum());
        }
        if (other.hasBattleType()) {
          setBattleType(other.getBattleType());
        }
        if (other.hasDupStar()) {
          setDupStar(other.getDupStar());
        }
        if (other.hasDupScore()) {
          setDupScore(other.getDupScore());
        }
        if (scoreInfoBuilder_ == null) {
          if (!other.scoreInfo_.isEmpty()) {
            if (scoreInfo_.isEmpty()) {
              scoreInfo_ = other.scoreInfo_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureScoreInfoIsMutable();
              scoreInfo_.addAll(other.scoreInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.scoreInfo_.isEmpty()) {
            if (scoreInfoBuilder_.isEmpty()) {
              scoreInfoBuilder_.dispose();
              scoreInfoBuilder_ = null;
              scoreInfo_ = other.scoreInfo_;
              bitField0_ = (bitField0_ & ~0x00004000);
              scoreInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getScoreInfoFieldBuilder() : null;
            } else {
              scoreInfoBuilder_.addAllMessages(other.scoreInfo_);
            }
          }
        }
        if (other.hasRoleDupStar()) {
          setRoleDupStar(other.getRoleDupStar());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              msgType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              result_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              targetId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              nextTargetId_ = input.readInt32();
              break;
            }
            case 50: {
              buffer.GCBattlePveResult.ItemProto.Builder subBuilder = buffer.GCBattlePveResult.ItemProto.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addResultRewardItem(subBuilder.buildPartial());
              break;
            }
            case 58: {
              buffer.GCBattlePveResult.ItemProto.Builder subBuilder = buffer.GCBattlePveResult.ItemProto.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addStepRrewardItem(subBuilder.buildPartial());
              break;
            }
            case 66: {
              buffer.GCBattlePveResult.ItemProto.Builder subBuilder = buffer.GCBattlePveResult.ItemProto.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTargetRrewardItem(subBuilder.buildPartial());
              break;
            }
            case 74: {
              buffer.GCBattlePveResult.ItemProto.Builder subBuilder = buffer.GCBattlePveResult.ItemProto.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addConWinRewardItem(subBuilder.buildPartial());
              break;
            }
            case 82: {
              buffer.GCBattlePveResult.ItemProto.Builder subBuilder = buffer.GCBattlePveResult.ItemProto.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDupRewardItem(subBuilder.buildPartial());
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              pveConWinNum_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              battleType_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              dupStar_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              dupScore_ = input.readInt32();
              break;
            }
            case 130: {
              buffer.GCBattlePveResult.ScoreInfo.Builder subBuilder = buffer.GCBattlePveResult.ScoreInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addScoreInfo(subBuilder.buildPartial());
              break;
            }
            case 136: {
              bitField0_ |= 0x00008000;
              roleDupStar_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 msgType = 1 [default = 25001];
      private int msgType_ = 25001;
      public boolean hasMsgType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getMsgType() {
        return msgType_;
      }
      public Builder setMsgType(int value) {
        bitField0_ |= 0x00000001;
        msgType_ = value;
        onChanged();
        return this;
      }
      public Builder clearMsgType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgType_ = 25001;
        onChanged();
        return this;
      }
      
      // optional int32 status = 2;
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 result = 3;
      private int result_ ;
      public boolean hasResult() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getResult() {
        return result_;
      }
      public Builder setResult(int value) {
        bitField0_ |= 0x00000004;
        result_ = value;
        onChanged();
        return this;
      }
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000004);
        result_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 targetId = 4;
      private int targetId_ ;
      public boolean hasTargetId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getTargetId() {
        return targetId_;
      }
      public Builder setTargetId(int value) {
        bitField0_ |= 0x00000008;
        targetId_ = value;
        onChanged();
        return this;
      }
      public Builder clearTargetId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        targetId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 nextTargetId = 5;
      private int nextTargetId_ ;
      public boolean hasNextTargetId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getNextTargetId() {
        return nextTargetId_;
      }
      public Builder setNextTargetId(int value) {
        bitField0_ |= 0x00000010;
        nextTargetId_ = value;
        onChanged();
        return this;
      }
      public Builder clearNextTargetId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nextTargetId_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .buffer.ItemProto resultRewardItem = 6;
      private java.util.List<buffer.GCBattlePveResult.ItemProto> resultRewardItem_ =
        java.util.Collections.emptyList();
      private void ensureResultRewardItemIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          resultRewardItem_ = new java.util.ArrayList<buffer.GCBattlePveResult.ItemProto>(resultRewardItem_);
          bitField0_ |= 0x00000020;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder> resultRewardItemBuilder_;
      
      public java.util.List<buffer.GCBattlePveResult.ItemProto> getResultRewardItemList() {
        if (resultRewardItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(resultRewardItem_);
        } else {
          return resultRewardItemBuilder_.getMessageList();
        }
      }
      public int getResultRewardItemCount() {
        if (resultRewardItemBuilder_ == null) {
          return resultRewardItem_.size();
        } else {
          return resultRewardItemBuilder_.getCount();
        }
      }
      public buffer.GCBattlePveResult.ItemProto getResultRewardItem(int index) {
        if (resultRewardItemBuilder_ == null) {
          return resultRewardItem_.get(index);
        } else {
          return resultRewardItemBuilder_.getMessage(index);
        }
      }
      public Builder setResultRewardItem(
          int index, buffer.GCBattlePveResult.ItemProto value) {
        if (resultRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultRewardItemIsMutable();
          resultRewardItem_.set(index, value);
          onChanged();
        } else {
          resultRewardItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setResultRewardItem(
          int index, buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (resultRewardItemBuilder_ == null) {
          ensureResultRewardItemIsMutable();
          resultRewardItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultRewardItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addResultRewardItem(buffer.GCBattlePveResult.ItemProto value) {
        if (resultRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultRewardItemIsMutable();
          resultRewardItem_.add(value);
          onChanged();
        } else {
          resultRewardItemBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addResultRewardItem(
          int index, buffer.GCBattlePveResult.ItemProto value) {
        if (resultRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultRewardItemIsMutable();
          resultRewardItem_.add(index, value);
          onChanged();
        } else {
          resultRewardItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addResultRewardItem(
          buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (resultRewardItemBuilder_ == null) {
          ensureResultRewardItemIsMutable();
          resultRewardItem_.add(builderForValue.build());
          onChanged();
        } else {
          resultRewardItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addResultRewardItem(
          int index, buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (resultRewardItemBuilder_ == null) {
          ensureResultRewardItemIsMutable();
          resultRewardItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultRewardItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllResultRewardItem(
          java.lang.Iterable<? extends buffer.GCBattlePveResult.ItemProto> values) {
        if (resultRewardItemBuilder_ == null) {
          ensureResultRewardItemIsMutable();
          super.addAll(values, resultRewardItem_);
          onChanged();
        } else {
          resultRewardItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearResultRewardItem() {
        if (resultRewardItemBuilder_ == null) {
          resultRewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          resultRewardItemBuilder_.clear();
        }
        return this;
      }
      public Builder removeResultRewardItem(int index) {
        if (resultRewardItemBuilder_ == null) {
          ensureResultRewardItemIsMutable();
          resultRewardItem_.remove(index);
          onChanged();
        } else {
          resultRewardItemBuilder_.remove(index);
        }
        return this;
      }
      public buffer.GCBattlePveResult.ItemProto.Builder getResultRewardItemBuilder(
          int index) {
        return getResultRewardItemFieldBuilder().getBuilder(index);
      }
      public buffer.GCBattlePveResult.ItemProtoOrBuilder getResultRewardItemOrBuilder(
          int index) {
        if (resultRewardItemBuilder_ == null) {
          return resultRewardItem_.get(index);  } else {
          return resultRewardItemBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
           getResultRewardItemOrBuilderList() {
        if (resultRewardItemBuilder_ != null) {
          return resultRewardItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(resultRewardItem_);
        }
      }
      public buffer.GCBattlePveResult.ItemProto.Builder addResultRewardItemBuilder() {
        return getResultRewardItemFieldBuilder().addBuilder(
            buffer.GCBattlePveResult.ItemProto.getDefaultInstance());
      }
      public buffer.GCBattlePveResult.ItemProto.Builder addResultRewardItemBuilder(
          int index) {
        return getResultRewardItemFieldBuilder().addBuilder(
            index, buffer.GCBattlePveResult.ItemProto.getDefaultInstance());
      }
      public java.util.List<buffer.GCBattlePveResult.ItemProto.Builder> 
           getResultRewardItemBuilderList() {
        return getResultRewardItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder> 
          getResultRewardItemFieldBuilder() {
        if (resultRewardItemBuilder_ == null) {
          resultRewardItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder>(
                  resultRewardItem_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          resultRewardItem_ = null;
        }
        return resultRewardItemBuilder_;
      }
      
      // repeated .buffer.ItemProto stepRrewardItem = 7;
      private java.util.List<buffer.GCBattlePveResult.ItemProto> stepRrewardItem_ =
        java.util.Collections.emptyList();
      private void ensureStepRrewardItemIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          stepRrewardItem_ = new java.util.ArrayList<buffer.GCBattlePveResult.ItemProto>(stepRrewardItem_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder> stepRrewardItemBuilder_;
      
      public java.util.List<buffer.GCBattlePveResult.ItemProto> getStepRrewardItemList() {
        if (stepRrewardItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stepRrewardItem_);
        } else {
          return stepRrewardItemBuilder_.getMessageList();
        }
      }
      public int getStepRrewardItemCount() {
        if (stepRrewardItemBuilder_ == null) {
          return stepRrewardItem_.size();
        } else {
          return stepRrewardItemBuilder_.getCount();
        }
      }
      public buffer.GCBattlePveResult.ItemProto getStepRrewardItem(int index) {
        if (stepRrewardItemBuilder_ == null) {
          return stepRrewardItem_.get(index);
        } else {
          return stepRrewardItemBuilder_.getMessage(index);
        }
      }
      public Builder setStepRrewardItem(
          int index, buffer.GCBattlePveResult.ItemProto value) {
        if (stepRrewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStepRrewardItemIsMutable();
          stepRrewardItem_.set(index, value);
          onChanged();
        } else {
          stepRrewardItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setStepRrewardItem(
          int index, buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (stepRrewardItemBuilder_ == null) {
          ensureStepRrewardItemIsMutable();
          stepRrewardItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          stepRrewardItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addStepRrewardItem(buffer.GCBattlePveResult.ItemProto value) {
        if (stepRrewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStepRrewardItemIsMutable();
          stepRrewardItem_.add(value);
          onChanged();
        } else {
          stepRrewardItemBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addStepRrewardItem(
          int index, buffer.GCBattlePveResult.ItemProto value) {
        if (stepRrewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStepRrewardItemIsMutable();
          stepRrewardItem_.add(index, value);
          onChanged();
        } else {
          stepRrewardItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addStepRrewardItem(
          buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (stepRrewardItemBuilder_ == null) {
          ensureStepRrewardItemIsMutable();
          stepRrewardItem_.add(builderForValue.build());
          onChanged();
        } else {
          stepRrewardItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addStepRrewardItem(
          int index, buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (stepRrewardItemBuilder_ == null) {
          ensureStepRrewardItemIsMutable();
          stepRrewardItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          stepRrewardItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllStepRrewardItem(
          java.lang.Iterable<? extends buffer.GCBattlePveResult.ItemProto> values) {
        if (stepRrewardItemBuilder_ == null) {
          ensureStepRrewardItemIsMutable();
          super.addAll(values, stepRrewardItem_);
          onChanged();
        } else {
          stepRrewardItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearStepRrewardItem() {
        if (stepRrewardItemBuilder_ == null) {
          stepRrewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          stepRrewardItemBuilder_.clear();
        }
        return this;
      }
      public Builder removeStepRrewardItem(int index) {
        if (stepRrewardItemBuilder_ == null) {
          ensureStepRrewardItemIsMutable();
          stepRrewardItem_.remove(index);
          onChanged();
        } else {
          stepRrewardItemBuilder_.remove(index);
        }
        return this;
      }
      public buffer.GCBattlePveResult.ItemProto.Builder getStepRrewardItemBuilder(
          int index) {
        return getStepRrewardItemFieldBuilder().getBuilder(index);
      }
      public buffer.GCBattlePveResult.ItemProtoOrBuilder getStepRrewardItemOrBuilder(
          int index) {
        if (stepRrewardItemBuilder_ == null) {
          return stepRrewardItem_.get(index);  } else {
          return stepRrewardItemBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
           getStepRrewardItemOrBuilderList() {
        if (stepRrewardItemBuilder_ != null) {
          return stepRrewardItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stepRrewardItem_);
        }
      }
      public buffer.GCBattlePveResult.ItemProto.Builder addStepRrewardItemBuilder() {
        return getStepRrewardItemFieldBuilder().addBuilder(
            buffer.GCBattlePveResult.ItemProto.getDefaultInstance());
      }
      public buffer.GCBattlePveResult.ItemProto.Builder addStepRrewardItemBuilder(
          int index) {
        return getStepRrewardItemFieldBuilder().addBuilder(
            index, buffer.GCBattlePveResult.ItemProto.getDefaultInstance());
      }
      public java.util.List<buffer.GCBattlePveResult.ItemProto.Builder> 
           getStepRrewardItemBuilderList() {
        return getStepRrewardItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder> 
          getStepRrewardItemFieldBuilder() {
        if (stepRrewardItemBuilder_ == null) {
          stepRrewardItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder>(
                  stepRrewardItem_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          stepRrewardItem_ = null;
        }
        return stepRrewardItemBuilder_;
      }
      
      // repeated .buffer.ItemProto targetRrewardItem = 8;
      private java.util.List<buffer.GCBattlePveResult.ItemProto> targetRrewardItem_ =
        java.util.Collections.emptyList();
      private void ensureTargetRrewardItemIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          targetRrewardItem_ = new java.util.ArrayList<buffer.GCBattlePveResult.ItemProto>(targetRrewardItem_);
          bitField0_ |= 0x00000080;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder> targetRrewardItemBuilder_;
      
      public java.util.List<buffer.GCBattlePveResult.ItemProto> getTargetRrewardItemList() {
        if (targetRrewardItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(targetRrewardItem_);
        } else {
          return targetRrewardItemBuilder_.getMessageList();
        }
      }
      public int getTargetRrewardItemCount() {
        if (targetRrewardItemBuilder_ == null) {
          return targetRrewardItem_.size();
        } else {
          return targetRrewardItemBuilder_.getCount();
        }
      }
      public buffer.GCBattlePveResult.ItemProto getTargetRrewardItem(int index) {
        if (targetRrewardItemBuilder_ == null) {
          return targetRrewardItem_.get(index);
        } else {
          return targetRrewardItemBuilder_.getMessage(index);
        }
      }
      public Builder setTargetRrewardItem(
          int index, buffer.GCBattlePveResult.ItemProto value) {
        if (targetRrewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetRrewardItemIsMutable();
          targetRrewardItem_.set(index, value);
          onChanged();
        } else {
          targetRrewardItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setTargetRrewardItem(
          int index, buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (targetRrewardItemBuilder_ == null) {
          ensureTargetRrewardItemIsMutable();
          targetRrewardItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          targetRrewardItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addTargetRrewardItem(buffer.GCBattlePveResult.ItemProto value) {
        if (targetRrewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetRrewardItemIsMutable();
          targetRrewardItem_.add(value);
          onChanged();
        } else {
          targetRrewardItemBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addTargetRrewardItem(
          int index, buffer.GCBattlePveResult.ItemProto value) {
        if (targetRrewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetRrewardItemIsMutable();
          targetRrewardItem_.add(index, value);
          onChanged();
        } else {
          targetRrewardItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addTargetRrewardItem(
          buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (targetRrewardItemBuilder_ == null) {
          ensureTargetRrewardItemIsMutable();
          targetRrewardItem_.add(builderForValue.build());
          onChanged();
        } else {
          targetRrewardItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addTargetRrewardItem(
          int index, buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (targetRrewardItemBuilder_ == null) {
          ensureTargetRrewardItemIsMutable();
          targetRrewardItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          targetRrewardItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllTargetRrewardItem(
          java.lang.Iterable<? extends buffer.GCBattlePveResult.ItemProto> values) {
        if (targetRrewardItemBuilder_ == null) {
          ensureTargetRrewardItemIsMutable();
          super.addAll(values, targetRrewardItem_);
          onChanged();
        } else {
          targetRrewardItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearTargetRrewardItem() {
        if (targetRrewardItemBuilder_ == null) {
          targetRrewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          targetRrewardItemBuilder_.clear();
        }
        return this;
      }
      public Builder removeTargetRrewardItem(int index) {
        if (targetRrewardItemBuilder_ == null) {
          ensureTargetRrewardItemIsMutable();
          targetRrewardItem_.remove(index);
          onChanged();
        } else {
          targetRrewardItemBuilder_.remove(index);
        }
        return this;
      }
      public buffer.GCBattlePveResult.ItemProto.Builder getTargetRrewardItemBuilder(
          int index) {
        return getTargetRrewardItemFieldBuilder().getBuilder(index);
      }
      public buffer.GCBattlePveResult.ItemProtoOrBuilder getTargetRrewardItemOrBuilder(
          int index) {
        if (targetRrewardItemBuilder_ == null) {
          return targetRrewardItem_.get(index);  } else {
          return targetRrewardItemBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
           getTargetRrewardItemOrBuilderList() {
        if (targetRrewardItemBuilder_ != null) {
          return targetRrewardItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(targetRrewardItem_);
        }
      }
      public buffer.GCBattlePveResult.ItemProto.Builder addTargetRrewardItemBuilder() {
        return getTargetRrewardItemFieldBuilder().addBuilder(
            buffer.GCBattlePveResult.ItemProto.getDefaultInstance());
      }
      public buffer.GCBattlePveResult.ItemProto.Builder addTargetRrewardItemBuilder(
          int index) {
        return getTargetRrewardItemFieldBuilder().addBuilder(
            index, buffer.GCBattlePveResult.ItemProto.getDefaultInstance());
      }
      public java.util.List<buffer.GCBattlePveResult.ItemProto.Builder> 
           getTargetRrewardItemBuilderList() {
        return getTargetRrewardItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder> 
          getTargetRrewardItemFieldBuilder() {
        if (targetRrewardItemBuilder_ == null) {
          targetRrewardItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder>(
                  targetRrewardItem_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          targetRrewardItem_ = null;
        }
        return targetRrewardItemBuilder_;
      }
      
      // repeated .buffer.ItemProto conWinRewardItem = 9;
      private java.util.List<buffer.GCBattlePveResult.ItemProto> conWinRewardItem_ =
        java.util.Collections.emptyList();
      private void ensureConWinRewardItemIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          conWinRewardItem_ = new java.util.ArrayList<buffer.GCBattlePveResult.ItemProto>(conWinRewardItem_);
          bitField0_ |= 0x00000100;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder> conWinRewardItemBuilder_;
      
      public java.util.List<buffer.GCBattlePveResult.ItemProto> getConWinRewardItemList() {
        if (conWinRewardItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(conWinRewardItem_);
        } else {
          return conWinRewardItemBuilder_.getMessageList();
        }
      }
      public int getConWinRewardItemCount() {
        if (conWinRewardItemBuilder_ == null) {
          return conWinRewardItem_.size();
        } else {
          return conWinRewardItemBuilder_.getCount();
        }
      }
      public buffer.GCBattlePveResult.ItemProto getConWinRewardItem(int index) {
        if (conWinRewardItemBuilder_ == null) {
          return conWinRewardItem_.get(index);
        } else {
          return conWinRewardItemBuilder_.getMessage(index);
        }
      }
      public Builder setConWinRewardItem(
          int index, buffer.GCBattlePveResult.ItemProto value) {
        if (conWinRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConWinRewardItemIsMutable();
          conWinRewardItem_.set(index, value);
          onChanged();
        } else {
          conWinRewardItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setConWinRewardItem(
          int index, buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (conWinRewardItemBuilder_ == null) {
          ensureConWinRewardItemIsMutable();
          conWinRewardItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          conWinRewardItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addConWinRewardItem(buffer.GCBattlePveResult.ItemProto value) {
        if (conWinRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConWinRewardItemIsMutable();
          conWinRewardItem_.add(value);
          onChanged();
        } else {
          conWinRewardItemBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addConWinRewardItem(
          int index, buffer.GCBattlePveResult.ItemProto value) {
        if (conWinRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConWinRewardItemIsMutable();
          conWinRewardItem_.add(index, value);
          onChanged();
        } else {
          conWinRewardItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addConWinRewardItem(
          buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (conWinRewardItemBuilder_ == null) {
          ensureConWinRewardItemIsMutable();
          conWinRewardItem_.add(builderForValue.build());
          onChanged();
        } else {
          conWinRewardItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addConWinRewardItem(
          int index, buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (conWinRewardItemBuilder_ == null) {
          ensureConWinRewardItemIsMutable();
          conWinRewardItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          conWinRewardItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllConWinRewardItem(
          java.lang.Iterable<? extends buffer.GCBattlePveResult.ItemProto> values) {
        if (conWinRewardItemBuilder_ == null) {
          ensureConWinRewardItemIsMutable();
          super.addAll(values, conWinRewardItem_);
          onChanged();
        } else {
          conWinRewardItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearConWinRewardItem() {
        if (conWinRewardItemBuilder_ == null) {
          conWinRewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          conWinRewardItemBuilder_.clear();
        }
        return this;
      }
      public Builder removeConWinRewardItem(int index) {
        if (conWinRewardItemBuilder_ == null) {
          ensureConWinRewardItemIsMutable();
          conWinRewardItem_.remove(index);
          onChanged();
        } else {
          conWinRewardItemBuilder_.remove(index);
        }
        return this;
      }
      public buffer.GCBattlePveResult.ItemProto.Builder getConWinRewardItemBuilder(
          int index) {
        return getConWinRewardItemFieldBuilder().getBuilder(index);
      }
      public buffer.GCBattlePveResult.ItemProtoOrBuilder getConWinRewardItemOrBuilder(
          int index) {
        if (conWinRewardItemBuilder_ == null) {
          return conWinRewardItem_.get(index);  } else {
          return conWinRewardItemBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
           getConWinRewardItemOrBuilderList() {
        if (conWinRewardItemBuilder_ != null) {
          return conWinRewardItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(conWinRewardItem_);
        }
      }
      public buffer.GCBattlePveResult.ItemProto.Builder addConWinRewardItemBuilder() {
        return getConWinRewardItemFieldBuilder().addBuilder(
            buffer.GCBattlePveResult.ItemProto.getDefaultInstance());
      }
      public buffer.GCBattlePveResult.ItemProto.Builder addConWinRewardItemBuilder(
          int index) {
        return getConWinRewardItemFieldBuilder().addBuilder(
            index, buffer.GCBattlePveResult.ItemProto.getDefaultInstance());
      }
      public java.util.List<buffer.GCBattlePveResult.ItemProto.Builder> 
           getConWinRewardItemBuilderList() {
        return getConWinRewardItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder> 
          getConWinRewardItemFieldBuilder() {
        if (conWinRewardItemBuilder_ == null) {
          conWinRewardItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder>(
                  conWinRewardItem_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          conWinRewardItem_ = null;
        }
        return conWinRewardItemBuilder_;
      }
      
      // repeated .buffer.ItemProto dupRewardItem = 10;
      private java.util.List<buffer.GCBattlePveResult.ItemProto> dupRewardItem_ =
        java.util.Collections.emptyList();
      private void ensureDupRewardItemIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          dupRewardItem_ = new java.util.ArrayList<buffer.GCBattlePveResult.ItemProto>(dupRewardItem_);
          bitField0_ |= 0x00000200;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder> dupRewardItemBuilder_;
      
      public java.util.List<buffer.GCBattlePveResult.ItemProto> getDupRewardItemList() {
        if (dupRewardItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dupRewardItem_);
        } else {
          return dupRewardItemBuilder_.getMessageList();
        }
      }
      public int getDupRewardItemCount() {
        if (dupRewardItemBuilder_ == null) {
          return dupRewardItem_.size();
        } else {
          return dupRewardItemBuilder_.getCount();
        }
      }
      public buffer.GCBattlePveResult.ItemProto getDupRewardItem(int index) {
        if (dupRewardItemBuilder_ == null) {
          return dupRewardItem_.get(index);
        } else {
          return dupRewardItemBuilder_.getMessage(index);
        }
      }
      public Builder setDupRewardItem(
          int index, buffer.GCBattlePveResult.ItemProto value) {
        if (dupRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDupRewardItemIsMutable();
          dupRewardItem_.set(index, value);
          onChanged();
        } else {
          dupRewardItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setDupRewardItem(
          int index, buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (dupRewardItemBuilder_ == null) {
          ensureDupRewardItemIsMutable();
          dupRewardItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          dupRewardItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addDupRewardItem(buffer.GCBattlePveResult.ItemProto value) {
        if (dupRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDupRewardItemIsMutable();
          dupRewardItem_.add(value);
          onChanged();
        } else {
          dupRewardItemBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addDupRewardItem(
          int index, buffer.GCBattlePveResult.ItemProto value) {
        if (dupRewardItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDupRewardItemIsMutable();
          dupRewardItem_.add(index, value);
          onChanged();
        } else {
          dupRewardItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addDupRewardItem(
          buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (dupRewardItemBuilder_ == null) {
          ensureDupRewardItemIsMutable();
          dupRewardItem_.add(builderForValue.build());
          onChanged();
        } else {
          dupRewardItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addDupRewardItem(
          int index, buffer.GCBattlePveResult.ItemProto.Builder builderForValue) {
        if (dupRewardItemBuilder_ == null) {
          ensureDupRewardItemIsMutable();
          dupRewardItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          dupRewardItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllDupRewardItem(
          java.lang.Iterable<? extends buffer.GCBattlePveResult.ItemProto> values) {
        if (dupRewardItemBuilder_ == null) {
          ensureDupRewardItemIsMutable();
          super.addAll(values, dupRewardItem_);
          onChanged();
        } else {
          dupRewardItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearDupRewardItem() {
        if (dupRewardItemBuilder_ == null) {
          dupRewardItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          dupRewardItemBuilder_.clear();
        }
        return this;
      }
      public Builder removeDupRewardItem(int index) {
        if (dupRewardItemBuilder_ == null) {
          ensureDupRewardItemIsMutable();
          dupRewardItem_.remove(index);
          onChanged();
        } else {
          dupRewardItemBuilder_.remove(index);
        }
        return this;
      }
      public buffer.GCBattlePveResult.ItemProto.Builder getDupRewardItemBuilder(
          int index) {
        return getDupRewardItemFieldBuilder().getBuilder(index);
      }
      public buffer.GCBattlePveResult.ItemProtoOrBuilder getDupRewardItemOrBuilder(
          int index) {
        if (dupRewardItemBuilder_ == null) {
          return dupRewardItem_.get(index);  } else {
          return dupRewardItemBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends buffer.GCBattlePveResult.ItemProtoOrBuilder> 
           getDupRewardItemOrBuilderList() {
        if (dupRewardItemBuilder_ != null) {
          return dupRewardItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dupRewardItem_);
        }
      }
      public buffer.GCBattlePveResult.ItemProto.Builder addDupRewardItemBuilder() {
        return getDupRewardItemFieldBuilder().addBuilder(
            buffer.GCBattlePveResult.ItemProto.getDefaultInstance());
      }
      public buffer.GCBattlePveResult.ItemProto.Builder addDupRewardItemBuilder(
          int index) {
        return getDupRewardItemFieldBuilder().addBuilder(
            index, buffer.GCBattlePveResult.ItemProto.getDefaultInstance());
      }
      public java.util.List<buffer.GCBattlePveResult.ItemProto.Builder> 
           getDupRewardItemBuilderList() {
        return getDupRewardItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder> 
          getDupRewardItemFieldBuilder() {
        if (dupRewardItemBuilder_ == null) {
          dupRewardItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              buffer.GCBattlePveResult.ItemProto, buffer.GCBattlePveResult.ItemProto.Builder, buffer.GCBattlePveResult.ItemProtoOrBuilder>(
                  dupRewardItem_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          dupRewardItem_ = null;
        }
        return dupRewardItemBuilder_;
      }
      
      // optional int32 pveConWinNum = 12;
      private int pveConWinNum_ ;
      public boolean hasPveConWinNum() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getPveConWinNum() {
        return pveConWinNum_;
      }
      public Builder setPveConWinNum(int value) {
        bitField0_ |= 0x00000400;
        pveConWinNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearPveConWinNum() {
        bitField0_ = (bitField0_ & ~0x00000400);
        pveConWinNum_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 battleType = 13;
      private int battleType_ ;
      public boolean hasBattleType() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getBattleType() {
        return battleType_;
      }
      public Builder setBattleType(int value) {
        bitField0_ |= 0x00000800;
        battleType_ = value;
        onChanged();
        return this;
      }
      public Builder clearBattleType() {
        bitField0_ = (bitField0_ & ~0x00000800);
        battleType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 dupStar = 14;
      private int dupStar_ ;
      public boolean hasDupStar() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getDupStar() {
        return dupStar_;
      }
      public Builder setDupStar(int value) {
        bitField0_ |= 0x00001000;
        dupStar_ = value;
        onChanged();
        return this;
      }
      public Builder clearDupStar() {
        bitField0_ = (bitField0_ & ~0x00001000);
        dupStar_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 dupScore = 15;
      private int dupScore_ ;
      public boolean hasDupScore() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getDupScore() {
        return dupScore_;
      }
      public Builder setDupScore(int value) {
        bitField0_ |= 0x00002000;
        dupScore_ = value;
        onChanged();
        return this;
      }
      public Builder clearDupScore() {
        bitField0_ = (bitField0_ & ~0x00002000);
        dupScore_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .buffer.ScoreInfo scoreInfo = 16;
      private java.util.List<buffer.GCBattlePveResult.ScoreInfo> scoreInfo_ =
        java.util.Collections.emptyList();
      private void ensureScoreInfoIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          scoreInfo_ = new java.util.ArrayList<buffer.GCBattlePveResult.ScoreInfo>(scoreInfo_);
          bitField0_ |= 0x00004000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveResult.ScoreInfo, buffer.GCBattlePveResult.ScoreInfo.Builder, buffer.GCBattlePveResult.ScoreInfoOrBuilder> scoreInfoBuilder_;
      
      public java.util.List<buffer.GCBattlePveResult.ScoreInfo> getScoreInfoList() {
        if (scoreInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(scoreInfo_);
        } else {
          return scoreInfoBuilder_.getMessageList();
        }
      }
      public int getScoreInfoCount() {
        if (scoreInfoBuilder_ == null) {
          return scoreInfo_.size();
        } else {
          return scoreInfoBuilder_.getCount();
        }
      }
      public buffer.GCBattlePveResult.ScoreInfo getScoreInfo(int index) {
        if (scoreInfoBuilder_ == null) {
          return scoreInfo_.get(index);
        } else {
          return scoreInfoBuilder_.getMessage(index);
        }
      }
      public Builder setScoreInfo(
          int index, buffer.GCBattlePveResult.ScoreInfo value) {
        if (scoreInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoreInfoIsMutable();
          scoreInfo_.set(index, value);
          onChanged();
        } else {
          scoreInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setScoreInfo(
          int index, buffer.GCBattlePveResult.ScoreInfo.Builder builderForValue) {
        if (scoreInfoBuilder_ == null) {
          ensureScoreInfoIsMutable();
          scoreInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          scoreInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addScoreInfo(buffer.GCBattlePveResult.ScoreInfo value) {
        if (scoreInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoreInfoIsMutable();
          scoreInfo_.add(value);
          onChanged();
        } else {
          scoreInfoBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addScoreInfo(
          int index, buffer.GCBattlePveResult.ScoreInfo value) {
        if (scoreInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoreInfoIsMutable();
          scoreInfo_.add(index, value);
          onChanged();
        } else {
          scoreInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addScoreInfo(
          buffer.GCBattlePveResult.ScoreInfo.Builder builderForValue) {
        if (scoreInfoBuilder_ == null) {
          ensureScoreInfoIsMutable();
          scoreInfo_.add(builderForValue.build());
          onChanged();
        } else {
          scoreInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addScoreInfo(
          int index, buffer.GCBattlePveResult.ScoreInfo.Builder builderForValue) {
        if (scoreInfoBuilder_ == null) {
          ensureScoreInfoIsMutable();
          scoreInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          scoreInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllScoreInfo(
          java.lang.Iterable<? extends buffer.GCBattlePveResult.ScoreInfo> values) {
        if (scoreInfoBuilder_ == null) {
          ensureScoreInfoIsMutable();
          super.addAll(values, scoreInfo_);
          onChanged();
        } else {
          scoreInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearScoreInfo() {
        if (scoreInfoBuilder_ == null) {
          scoreInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          scoreInfoBuilder_.clear();
        }
        return this;
      }
      public Builder removeScoreInfo(int index) {
        if (scoreInfoBuilder_ == null) {
          ensureScoreInfoIsMutable();
          scoreInfo_.remove(index);
          onChanged();
        } else {
          scoreInfoBuilder_.remove(index);
        }
        return this;
      }
      public buffer.GCBattlePveResult.ScoreInfo.Builder getScoreInfoBuilder(
          int index) {
        return getScoreInfoFieldBuilder().getBuilder(index);
      }
      public buffer.GCBattlePveResult.ScoreInfoOrBuilder getScoreInfoOrBuilder(
          int index) {
        if (scoreInfoBuilder_ == null) {
          return scoreInfo_.get(index);  } else {
          return scoreInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends buffer.GCBattlePveResult.ScoreInfoOrBuilder> 
           getScoreInfoOrBuilderList() {
        if (scoreInfoBuilder_ != null) {
          return scoreInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(scoreInfo_);
        }
      }
      public buffer.GCBattlePveResult.ScoreInfo.Builder addScoreInfoBuilder() {
        return getScoreInfoFieldBuilder().addBuilder(
            buffer.GCBattlePveResult.ScoreInfo.getDefaultInstance());
      }
      public buffer.GCBattlePveResult.ScoreInfo.Builder addScoreInfoBuilder(
          int index) {
        return getScoreInfoFieldBuilder().addBuilder(
            index, buffer.GCBattlePveResult.ScoreInfo.getDefaultInstance());
      }
      public java.util.List<buffer.GCBattlePveResult.ScoreInfo.Builder> 
           getScoreInfoBuilderList() {
        return getScoreInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveResult.ScoreInfo, buffer.GCBattlePveResult.ScoreInfo.Builder, buffer.GCBattlePveResult.ScoreInfoOrBuilder> 
          getScoreInfoFieldBuilder() {
        if (scoreInfoBuilder_ == null) {
          scoreInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              buffer.GCBattlePveResult.ScoreInfo, buffer.GCBattlePveResult.ScoreInfo.Builder, buffer.GCBattlePveResult.ScoreInfoOrBuilder>(
                  scoreInfo_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          scoreInfo_ = null;
        }
        return scoreInfoBuilder_;
      }
      
      // optional int32 roleDupStar = 17;
      private int roleDupStar_ ;
      public boolean hasRoleDupStar() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getRoleDupStar() {
        return roleDupStar_;
      }
      public Builder setRoleDupStar(int value) {
        bitField0_ |= 0x00008000;
        roleDupStar_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleDupStar() {
        bitField0_ = (bitField0_ & ~0x00008000);
        roleDupStar_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.GCBattlePveResultProto)
    }
    
    static {
      defaultInstance = new GCBattlePveResultProto(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.GCBattlePveResultProto)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_ScoreInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_ScoreInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_ItemProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_ItemProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_GCBattlePveResultProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_GCBattlePveResultProto_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027GCBattlePveResult.proto\022\006buffer\"-\n\tSco" +
      "reInfo\022\021\n\tscoreType\030\001 \001(\005\022\r\n\005score\030\002 \001(\005" +
      "\">\n\tItemProto\022\020\n\010itemType\030\001 \001(\005\022\016\n\006itemI" +
      "d\030\002 \001(\005\022\017\n\007itemNum\030\003 \001(\005\"\336\003\n\026GCBattlePve" +
      "ResultProto\022\026\n\007msgType\030\001 \001(\005:\00525001\022\016\n\006s" +
      "tatus\030\002 \001(\005\022\016\n\006result\030\003 \001(\005\022\020\n\010targetId\030" +
      "\004 \001(\005\022\024\n\014nextTargetId\030\005 \001(\005\022+\n\020resultRew" +
      "ardItem\030\006 \003(\0132\021.buffer.ItemProto\022*\n\017step" +
      "RrewardItem\030\007 \003(\0132\021.buffer.ItemProto\022,\n\021" +
      "targetRrewardItem\030\010 \003(\0132\021.buffer.ItemPro",
      "to\022+\n\020conWinRewardItem\030\t \003(\0132\021.buffer.It" +
      "emProto\022(\n\rdupRewardItem\030\n \003(\0132\021.buffer." +
      "ItemProto\022\024\n\014pveConWinNum\030\014 \001(\005\022\022\n\nbattl" +
      "eType\030\r \001(\005\022\017\n\007dupStar\030\016 \001(\005\022\020\n\010dupScore" +
      "\030\017 \001(\005\022$\n\tscoreInfo\030\020 \003(\0132\021.buffer.Score" +
      "Info\022\023\n\013roleDupStar\030\021 \001(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_buffer_ScoreInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_buffer_ScoreInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_ScoreInfo_descriptor,
              new java.lang.String[] { "ScoreType", "Score", },
              buffer.GCBattlePveResult.ScoreInfo.class,
              buffer.GCBattlePveResult.ScoreInfo.Builder.class);
          internal_static_buffer_ItemProto_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_buffer_ItemProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_ItemProto_descriptor,
              new java.lang.String[] { "ItemType", "ItemId", "ItemNum", },
              buffer.GCBattlePveResult.ItemProto.class,
              buffer.GCBattlePveResult.ItemProto.Builder.class);
          internal_static_buffer_GCBattlePveResultProto_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_buffer_GCBattlePveResultProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_GCBattlePveResultProto_descriptor,
              new java.lang.String[] { "MsgType", "Status", "Result", "TargetId", "NextTargetId", "ResultRewardItem", "StepRrewardItem", "TargetRrewardItem", "ConWinRewardItem", "DupRewardItem", "PveConWinNum", "BattleType", "DupStar", "DupScore", "ScoreInfo", "RoleDupStar", },
              buffer.GCBattlePveResult.GCBattlePveResultProto.class,
              buffer.GCBattlePveResult.GCBattlePveResultProto.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
