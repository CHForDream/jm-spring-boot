// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GCPveCityInfoMsg.proto

package buffer;

public final class GCPveCityInfoMsg {
  private GCPveCityInfoMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DupInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 dupId = 1;
    boolean hasDupId();
    int getDupId();
    
    // optional int32 dupNum = 2;
    boolean hasDupNum();
    int getDupNum();
    
    // optional int32 dupStar = 3;
    boolean hasDupStar();
    int getDupStar();
  }
  public static final class DupInfo extends
      com.google.protobuf.GeneratedMessage
      implements DupInfoOrBuilder {
    // Use DupInfo.newBuilder() to construct.
    private DupInfo(Builder builder) {
      super(builder);
    }
    private DupInfo(boolean noInit) {}
    
    private static final DupInfo defaultInstance;
    public static DupInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public DupInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCPveCityInfoMsg.internal_static_buffer_DupInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCPveCityInfoMsg.internal_static_buffer_DupInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 dupId = 1;
    public static final int DUPID_FIELD_NUMBER = 1;
    private int dupId_;
    public boolean hasDupId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getDupId() {
      return dupId_;
    }
    
    // optional int32 dupNum = 2;
    public static final int DUPNUM_FIELD_NUMBER = 2;
    private int dupNum_;
    public boolean hasDupNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getDupNum() {
      return dupNum_;
    }
    
    // optional int32 dupStar = 3;
    public static final int DUPSTAR_FIELD_NUMBER = 3;
    private int dupStar_;
    public boolean hasDupStar() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getDupStar() {
      return dupStar_;
    }
    
    private void initFields() {
      dupId_ = 0;
      dupNum_ = 0;
      dupStar_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, dupId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, dupNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, dupStar_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, dupId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, dupNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, dupStar_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCPveCityInfoMsg.DupInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.DupInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.DupInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.DupInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.DupInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.DupInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.DupInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCPveCityInfoMsg.DupInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCPveCityInfoMsg.DupInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.DupInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCPveCityInfoMsg.DupInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCPveCityInfoMsg.DupInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCPveCityInfoMsg.internal_static_buffer_DupInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCPveCityInfoMsg.internal_static_buffer_DupInfo_fieldAccessorTable;
      }
      
      // Construct using buffer.GCPveCityInfoMsg.DupInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        dupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dupNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        dupStar_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCPveCityInfoMsg.DupInfo.getDescriptor();
      }
      
      public buffer.GCPveCityInfoMsg.DupInfo getDefaultInstanceForType() {
        return buffer.GCPveCityInfoMsg.DupInfo.getDefaultInstance();
      }
      
      public buffer.GCPveCityInfoMsg.DupInfo build() {
        buffer.GCPveCityInfoMsg.DupInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCPveCityInfoMsg.DupInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCPveCityInfoMsg.DupInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCPveCityInfoMsg.DupInfo buildPartial() {
        buffer.GCPveCityInfoMsg.DupInfo result = new buffer.GCPveCityInfoMsg.DupInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dupId_ = dupId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dupNum_ = dupNum_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dupStar_ = dupStar_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCPveCityInfoMsg.DupInfo) {
          return mergeFrom((buffer.GCPveCityInfoMsg.DupInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCPveCityInfoMsg.DupInfo other) {
        if (other == buffer.GCPveCityInfoMsg.DupInfo.getDefaultInstance()) return this;
        if (other.hasDupId()) {
          setDupId(other.getDupId());
        }
        if (other.hasDupNum()) {
          setDupNum(other.getDupNum());
        }
        if (other.hasDupStar()) {
          setDupStar(other.getDupStar());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              dupId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              dupNum_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              dupStar_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 dupId = 1;
      private int dupId_ ;
      public boolean hasDupId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getDupId() {
        return dupId_;
      }
      public Builder setDupId(int value) {
        bitField0_ |= 0x00000001;
        dupId_ = value;
        onChanged();
        return this;
      }
      public Builder clearDupId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dupId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 dupNum = 2;
      private int dupNum_ ;
      public boolean hasDupNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getDupNum() {
        return dupNum_;
      }
      public Builder setDupNum(int value) {
        bitField0_ |= 0x00000002;
        dupNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearDupNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dupNum_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 dupStar = 3;
      private int dupStar_ ;
      public boolean hasDupStar() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getDupStar() {
        return dupStar_;
      }
      public Builder setDupStar(int value) {
        bitField0_ |= 0x00000004;
        dupStar_ = value;
        onChanged();
        return this;
      }
      public Builder clearDupStar() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dupStar_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.DupInfo)
    }
    
    static {
      defaultInstance = new DupInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.DupInfo)
  }
  
  public interface CityInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 cityId = 1;
    boolean hasCityId();
    int getCityId();
    
    // repeated .buffer.DupInfo dupInfo = 2;
    java.util.List<buffer.GCPveCityInfoMsg.DupInfo> 
        getDupInfoList();
    buffer.GCPveCityInfoMsg.DupInfo getDupInfo(int index);
    int getDupInfoCount();
    java.util.List<? extends buffer.GCPveCityInfoMsg.DupInfoOrBuilder> 
        getDupInfoOrBuilderList();
    buffer.GCPveCityInfoMsg.DupInfoOrBuilder getDupInfoOrBuilder(
        int index);
  }
  public static final class CityInfo extends
      com.google.protobuf.GeneratedMessage
      implements CityInfoOrBuilder {
    // Use CityInfo.newBuilder() to construct.
    private CityInfo(Builder builder) {
      super(builder);
    }
    private CityInfo(boolean noInit) {}
    
    private static final CityInfo defaultInstance;
    public static CityInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public CityInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCPveCityInfoMsg.internal_static_buffer_CityInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCPveCityInfoMsg.internal_static_buffer_CityInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 cityId = 1;
    public static final int CITYID_FIELD_NUMBER = 1;
    private int cityId_;
    public boolean hasCityId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getCityId() {
      return cityId_;
    }
    
    // repeated .buffer.DupInfo dupInfo = 2;
    public static final int DUPINFO_FIELD_NUMBER = 2;
    private java.util.List<buffer.GCPveCityInfoMsg.DupInfo> dupInfo_;
    public java.util.List<buffer.GCPveCityInfoMsg.DupInfo> getDupInfoList() {
      return dupInfo_;
    }
    public java.util.List<? extends buffer.GCPveCityInfoMsg.DupInfoOrBuilder> 
        getDupInfoOrBuilderList() {
      return dupInfo_;
    }
    public int getDupInfoCount() {
      return dupInfo_.size();
    }
    public buffer.GCPveCityInfoMsg.DupInfo getDupInfo(int index) {
      return dupInfo_.get(index);
    }
    public buffer.GCPveCityInfoMsg.DupInfoOrBuilder getDupInfoOrBuilder(
        int index) {
      return dupInfo_.get(index);
    }
    
    private void initFields() {
      cityId_ = 0;
      dupInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cityId_);
      }
      for (int i = 0; i < dupInfo_.size(); i++) {
        output.writeMessage(2, dupInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cityId_);
      }
      for (int i = 0; i < dupInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, dupInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCPveCityInfoMsg.CityInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.CityInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.CityInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.CityInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.CityInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.CityInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.CityInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCPveCityInfoMsg.CityInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCPveCityInfoMsg.CityInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.CityInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCPveCityInfoMsg.CityInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCPveCityInfoMsg.CityInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCPveCityInfoMsg.internal_static_buffer_CityInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCPveCityInfoMsg.internal_static_buffer_CityInfo_fieldAccessorTable;
      }
      
      // Construct using buffer.GCPveCityInfoMsg.CityInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDupInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        cityId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dupInfoBuilder_ == null) {
          dupInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          dupInfoBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCPveCityInfoMsg.CityInfo.getDescriptor();
      }
      
      public buffer.GCPveCityInfoMsg.CityInfo getDefaultInstanceForType() {
        return buffer.GCPveCityInfoMsg.CityInfo.getDefaultInstance();
      }
      
      public buffer.GCPveCityInfoMsg.CityInfo build() {
        buffer.GCPveCityInfoMsg.CityInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCPveCityInfoMsg.CityInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCPveCityInfoMsg.CityInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCPveCityInfoMsg.CityInfo buildPartial() {
        buffer.GCPveCityInfoMsg.CityInfo result = new buffer.GCPveCityInfoMsg.CityInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cityId_ = cityId_;
        if (dupInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            dupInfo_ = java.util.Collections.unmodifiableList(dupInfo_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.dupInfo_ = dupInfo_;
        } else {
          result.dupInfo_ = dupInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCPveCityInfoMsg.CityInfo) {
          return mergeFrom((buffer.GCPveCityInfoMsg.CityInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCPveCityInfoMsg.CityInfo other) {
        if (other == buffer.GCPveCityInfoMsg.CityInfo.getDefaultInstance()) return this;
        if (other.hasCityId()) {
          setCityId(other.getCityId());
        }
        if (dupInfoBuilder_ == null) {
          if (!other.dupInfo_.isEmpty()) {
            if (dupInfo_.isEmpty()) {
              dupInfo_ = other.dupInfo_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDupInfoIsMutable();
              dupInfo_.addAll(other.dupInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.dupInfo_.isEmpty()) {
            if (dupInfoBuilder_.isEmpty()) {
              dupInfoBuilder_.dispose();
              dupInfoBuilder_ = null;
              dupInfo_ = other.dupInfo_;
              bitField0_ = (bitField0_ & ~0x00000002);
              dupInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDupInfoFieldBuilder() : null;
            } else {
              dupInfoBuilder_.addAllMessages(other.dupInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cityId_ = input.readInt32();
              break;
            }
            case 18: {
              buffer.GCPveCityInfoMsg.DupInfo.Builder subBuilder = buffer.GCPveCityInfoMsg.DupInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDupInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 cityId = 1;
      private int cityId_ ;
      public boolean hasCityId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getCityId() {
        return cityId_;
      }
      public Builder setCityId(int value) {
        bitField0_ |= 0x00000001;
        cityId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCityId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cityId_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .buffer.DupInfo dupInfo = 2;
      private java.util.List<buffer.GCPveCityInfoMsg.DupInfo> dupInfo_ =
        java.util.Collections.emptyList();
      private void ensureDupInfoIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          dupInfo_ = new java.util.ArrayList<buffer.GCPveCityInfoMsg.DupInfo>(dupInfo_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCPveCityInfoMsg.DupInfo, buffer.GCPveCityInfoMsg.DupInfo.Builder, buffer.GCPveCityInfoMsg.DupInfoOrBuilder> dupInfoBuilder_;
      
      public java.util.List<buffer.GCPveCityInfoMsg.DupInfo> getDupInfoList() {
        if (dupInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dupInfo_);
        } else {
          return dupInfoBuilder_.getMessageList();
        }
      }
      public int getDupInfoCount() {
        if (dupInfoBuilder_ == null) {
          return dupInfo_.size();
        } else {
          return dupInfoBuilder_.getCount();
        }
      }
      public buffer.GCPveCityInfoMsg.DupInfo getDupInfo(int index) {
        if (dupInfoBuilder_ == null) {
          return dupInfo_.get(index);
        } else {
          return dupInfoBuilder_.getMessage(index);
        }
      }
      public Builder setDupInfo(
          int index, buffer.GCPveCityInfoMsg.DupInfo value) {
        if (dupInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDupInfoIsMutable();
          dupInfo_.set(index, value);
          onChanged();
        } else {
          dupInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setDupInfo(
          int index, buffer.GCPveCityInfoMsg.DupInfo.Builder builderForValue) {
        if (dupInfoBuilder_ == null) {
          ensureDupInfoIsMutable();
          dupInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          dupInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addDupInfo(buffer.GCPveCityInfoMsg.DupInfo value) {
        if (dupInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDupInfoIsMutable();
          dupInfo_.add(value);
          onChanged();
        } else {
          dupInfoBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addDupInfo(
          int index, buffer.GCPveCityInfoMsg.DupInfo value) {
        if (dupInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDupInfoIsMutable();
          dupInfo_.add(index, value);
          onChanged();
        } else {
          dupInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addDupInfo(
          buffer.GCPveCityInfoMsg.DupInfo.Builder builderForValue) {
        if (dupInfoBuilder_ == null) {
          ensureDupInfoIsMutable();
          dupInfo_.add(builderForValue.build());
          onChanged();
        } else {
          dupInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addDupInfo(
          int index, buffer.GCPveCityInfoMsg.DupInfo.Builder builderForValue) {
        if (dupInfoBuilder_ == null) {
          ensureDupInfoIsMutable();
          dupInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          dupInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllDupInfo(
          java.lang.Iterable<? extends buffer.GCPveCityInfoMsg.DupInfo> values) {
        if (dupInfoBuilder_ == null) {
          ensureDupInfoIsMutable();
          super.addAll(values, dupInfo_);
          onChanged();
        } else {
          dupInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearDupInfo() {
        if (dupInfoBuilder_ == null) {
          dupInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          dupInfoBuilder_.clear();
        }
        return this;
      }
      public Builder removeDupInfo(int index) {
        if (dupInfoBuilder_ == null) {
          ensureDupInfoIsMutable();
          dupInfo_.remove(index);
          onChanged();
        } else {
          dupInfoBuilder_.remove(index);
        }
        return this;
      }
      public buffer.GCPveCityInfoMsg.DupInfo.Builder getDupInfoBuilder(
          int index) {
        return getDupInfoFieldBuilder().getBuilder(index);
      }
      public buffer.GCPveCityInfoMsg.DupInfoOrBuilder getDupInfoOrBuilder(
          int index) {
        if (dupInfoBuilder_ == null) {
          return dupInfo_.get(index);  } else {
          return dupInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends buffer.GCPveCityInfoMsg.DupInfoOrBuilder> 
           getDupInfoOrBuilderList() {
        if (dupInfoBuilder_ != null) {
          return dupInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dupInfo_);
        }
      }
      public buffer.GCPveCityInfoMsg.DupInfo.Builder addDupInfoBuilder() {
        return getDupInfoFieldBuilder().addBuilder(
            buffer.GCPveCityInfoMsg.DupInfo.getDefaultInstance());
      }
      public buffer.GCPveCityInfoMsg.DupInfo.Builder addDupInfoBuilder(
          int index) {
        return getDupInfoFieldBuilder().addBuilder(
            index, buffer.GCPveCityInfoMsg.DupInfo.getDefaultInstance());
      }
      public java.util.List<buffer.GCPveCityInfoMsg.DupInfo.Builder> 
           getDupInfoBuilderList() {
        return getDupInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCPveCityInfoMsg.DupInfo, buffer.GCPveCityInfoMsg.DupInfo.Builder, buffer.GCPveCityInfoMsg.DupInfoOrBuilder> 
          getDupInfoFieldBuilder() {
        if (dupInfoBuilder_ == null) {
          dupInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              buffer.GCPveCityInfoMsg.DupInfo, buffer.GCPveCityInfoMsg.DupInfo.Builder, buffer.GCPveCityInfoMsg.DupInfoOrBuilder>(
                  dupInfo_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          dupInfo_ = null;
        }
        return dupInfoBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.CityInfo)
    }
    
    static {
      defaultInstance = new CityInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.CityInfo)
  }
  
  public interface GCPveCityInfoProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 msgType = 1 [default = 7010];
    boolean hasMsgType();
    int getMsgType();
    
    // optional int32 pveId = 2;
    boolean hasPveId();
    int getPveId();
    
    // optional int32 pveStatus = 3;
    boolean hasPveStatus();
    int getPveStatus();
    
    // optional int32 cityId = 4;
    boolean hasCityId();
    int getCityId();
    
    // optional .buffer.CityInfo cityInfo = 5;
    boolean hasCityInfo();
    buffer.GCPveCityInfoMsg.CityInfo getCityInfo();
    buffer.GCPveCityInfoMsg.CityInfoOrBuilder getCityInfoOrBuilder();
    
    // optional int32 status = 6;
    boolean hasStatus();
    int getStatus();
    
    // repeated int32 cityIds = 7;
    java.util.List<java.lang.Integer> getCityIdsList();
    int getCityIdsCount();
    int getCityIds(int index);
  }
  public static final class GCPveCityInfoProto extends
      com.google.protobuf.GeneratedMessage
      implements GCPveCityInfoProtoOrBuilder {
    // Use GCPveCityInfoProto.newBuilder() to construct.
    private GCPveCityInfoProto(Builder builder) {
      super(builder);
    }
    private GCPveCityInfoProto(boolean noInit) {}
    
    private static final GCPveCityInfoProto defaultInstance;
    public static GCPveCityInfoProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public GCPveCityInfoProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCPveCityInfoMsg.internal_static_buffer_GCPveCityInfoProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCPveCityInfoMsg.internal_static_buffer_GCPveCityInfoProto_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 msgType = 1 [default = 7010];
    public static final int MSGTYPE_FIELD_NUMBER = 1;
    private int msgType_;
    public boolean hasMsgType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getMsgType() {
      return msgType_;
    }
    
    // optional int32 pveId = 2;
    public static final int PVEID_FIELD_NUMBER = 2;
    private int pveId_;
    public boolean hasPveId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPveId() {
      return pveId_;
    }
    
    // optional int32 pveStatus = 3;
    public static final int PVESTATUS_FIELD_NUMBER = 3;
    private int pveStatus_;
    public boolean hasPveStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getPveStatus() {
      return pveStatus_;
    }
    
    // optional int32 cityId = 4;
    public static final int CITYID_FIELD_NUMBER = 4;
    private int cityId_;
    public boolean hasCityId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getCityId() {
      return cityId_;
    }
    
    // optional .buffer.CityInfo cityInfo = 5;
    public static final int CITYINFO_FIELD_NUMBER = 5;
    private buffer.GCPveCityInfoMsg.CityInfo cityInfo_;
    public boolean hasCityInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public buffer.GCPveCityInfoMsg.CityInfo getCityInfo() {
      return cityInfo_;
    }
    public buffer.GCPveCityInfoMsg.CityInfoOrBuilder getCityInfoOrBuilder() {
      return cityInfo_;
    }
    
    // optional int32 status = 6;
    public static final int STATUS_FIELD_NUMBER = 6;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getStatus() {
      return status_;
    }
    
    // repeated int32 cityIds = 7;
    public static final int CITYIDS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> cityIds_;
    public java.util.List<java.lang.Integer>
        getCityIdsList() {
      return cityIds_;
    }
    public int getCityIdsCount() {
      return cityIds_.size();
    }
    public int getCityIds(int index) {
      return cityIds_.get(index);
    }
    
    private void initFields() {
      msgType_ = 7010;
      pveId_ = 0;
      pveStatus_ = 0;
      cityId_ = 0;
      cityInfo_ = buffer.GCPveCityInfoMsg.CityInfo.getDefaultInstance();
      status_ = 0;
      cityIds_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, msgType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, pveId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, pveStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, cityId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, cityInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, status_);
      }
      for (int i = 0; i < cityIds_.size(); i++) {
        output.writeInt32(7, cityIds_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, msgType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, pveId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pveStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cityId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, cityInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, status_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cityIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cityIds_.get(i));
        }
        size += dataSize;
        size += 1 * getCityIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCPveCityInfoMsg.GCPveCityInfoProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.GCPveCityInfoProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.GCPveCityInfoProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.GCPveCityInfoProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.GCPveCityInfoProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.GCPveCityInfoProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.GCPveCityInfoProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCPveCityInfoMsg.GCPveCityInfoProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCPveCityInfoMsg.GCPveCityInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCPveCityInfoMsg.GCPveCityInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCPveCityInfoMsg.GCPveCityInfoProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCPveCityInfoMsg.GCPveCityInfoProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCPveCityInfoMsg.internal_static_buffer_GCPveCityInfoProto_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCPveCityInfoMsg.internal_static_buffer_GCPveCityInfoProto_fieldAccessorTable;
      }
      
      // Construct using buffer.GCPveCityInfoMsg.GCPveCityInfoProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCityInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        msgType_ = 7010;
        bitField0_ = (bitField0_ & ~0x00000001);
        pveId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        pveStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cityId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (cityInfoBuilder_ == null) {
          cityInfo_ = buffer.GCPveCityInfoMsg.CityInfo.getDefaultInstance();
        } else {
          cityInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        cityIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCPveCityInfoMsg.GCPveCityInfoProto.getDescriptor();
      }
      
      public buffer.GCPveCityInfoMsg.GCPveCityInfoProto getDefaultInstanceForType() {
        return buffer.GCPveCityInfoMsg.GCPveCityInfoProto.getDefaultInstance();
      }
      
      public buffer.GCPveCityInfoMsg.GCPveCityInfoProto build() {
        buffer.GCPveCityInfoMsg.GCPveCityInfoProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCPveCityInfoMsg.GCPveCityInfoProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCPveCityInfoMsg.GCPveCityInfoProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCPveCityInfoMsg.GCPveCityInfoProto buildPartial() {
        buffer.GCPveCityInfoMsg.GCPveCityInfoProto result = new buffer.GCPveCityInfoMsg.GCPveCityInfoProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgType_ = msgType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pveId_ = pveId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pveStatus_ = pveStatus_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cityId_ = cityId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (cityInfoBuilder_ == null) {
          result.cityInfo_ = cityInfo_;
        } else {
          result.cityInfo_ = cityInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.status_ = status_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          cityIds_ = java.util.Collections.unmodifiableList(cityIds_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.cityIds_ = cityIds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCPveCityInfoMsg.GCPveCityInfoProto) {
          return mergeFrom((buffer.GCPveCityInfoMsg.GCPveCityInfoProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCPveCityInfoMsg.GCPveCityInfoProto other) {
        if (other == buffer.GCPveCityInfoMsg.GCPveCityInfoProto.getDefaultInstance()) return this;
        if (other.hasMsgType()) {
          setMsgType(other.getMsgType());
        }
        if (other.hasPveId()) {
          setPveId(other.getPveId());
        }
        if (other.hasPveStatus()) {
          setPveStatus(other.getPveStatus());
        }
        if (other.hasCityId()) {
          setCityId(other.getCityId());
        }
        if (other.hasCityInfo()) {
          mergeCityInfo(other.getCityInfo());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (!other.cityIds_.isEmpty()) {
          if (cityIds_.isEmpty()) {
            cityIds_ = other.cityIds_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureCityIdsIsMutable();
            cityIds_.addAll(other.cityIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              msgType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              pveId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              pveStatus_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              cityId_ = input.readInt32();
              break;
            }
            case 42: {
              buffer.GCPveCityInfoMsg.CityInfo.Builder subBuilder = buffer.GCPveCityInfoMsg.CityInfo.newBuilder();
              if (hasCityInfo()) {
                subBuilder.mergeFrom(getCityInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCityInfo(subBuilder.buildPartial());
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              status_ = input.readInt32();
              break;
            }
            case 56: {
              ensureCityIdsIsMutable();
              cityIds_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCityIds(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 msgType = 1 [default = 7010];
      private int msgType_ = 7010;
      public boolean hasMsgType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getMsgType() {
        return msgType_;
      }
      public Builder setMsgType(int value) {
        bitField0_ |= 0x00000001;
        msgType_ = value;
        onChanged();
        return this;
      }
      public Builder clearMsgType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgType_ = 7010;
        onChanged();
        return this;
      }
      
      // optional int32 pveId = 2;
      private int pveId_ ;
      public boolean hasPveId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPveId() {
        return pveId_;
      }
      public Builder setPveId(int value) {
        bitField0_ |= 0x00000002;
        pveId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPveId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pveId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 pveStatus = 3;
      private int pveStatus_ ;
      public boolean hasPveStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getPveStatus() {
        return pveStatus_;
      }
      public Builder setPveStatus(int value) {
        bitField0_ |= 0x00000004;
        pveStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearPveStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pveStatus_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 cityId = 4;
      private int cityId_ ;
      public boolean hasCityId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getCityId() {
        return cityId_;
      }
      public Builder setCityId(int value) {
        bitField0_ |= 0x00000008;
        cityId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCityId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cityId_ = 0;
        onChanged();
        return this;
      }
      
      // optional .buffer.CityInfo cityInfo = 5;
      private buffer.GCPveCityInfoMsg.CityInfo cityInfo_ = buffer.GCPveCityInfoMsg.CityInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          buffer.GCPveCityInfoMsg.CityInfo, buffer.GCPveCityInfoMsg.CityInfo.Builder, buffer.GCPveCityInfoMsg.CityInfoOrBuilder> cityInfoBuilder_;
      public boolean hasCityInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public buffer.GCPveCityInfoMsg.CityInfo getCityInfo() {
        if (cityInfoBuilder_ == null) {
          return cityInfo_;
        } else {
          return cityInfoBuilder_.getMessage();
        }
      }
      public Builder setCityInfo(buffer.GCPveCityInfoMsg.CityInfo value) {
        if (cityInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cityInfo_ = value;
          onChanged();
        } else {
          cityInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setCityInfo(
          buffer.GCPveCityInfoMsg.CityInfo.Builder builderForValue) {
        if (cityInfoBuilder_ == null) {
          cityInfo_ = builderForValue.build();
          onChanged();
        } else {
          cityInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeCityInfo(buffer.GCPveCityInfoMsg.CityInfo value) {
        if (cityInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              cityInfo_ != buffer.GCPveCityInfoMsg.CityInfo.getDefaultInstance()) {
            cityInfo_ =
              buffer.GCPveCityInfoMsg.CityInfo.newBuilder(cityInfo_).mergeFrom(value).buildPartial();
          } else {
            cityInfo_ = value;
          }
          onChanged();
        } else {
          cityInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearCityInfo() {
        if (cityInfoBuilder_ == null) {
          cityInfo_ = buffer.GCPveCityInfoMsg.CityInfo.getDefaultInstance();
          onChanged();
        } else {
          cityInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public buffer.GCPveCityInfoMsg.CityInfo.Builder getCityInfoBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getCityInfoFieldBuilder().getBuilder();
      }
      public buffer.GCPveCityInfoMsg.CityInfoOrBuilder getCityInfoOrBuilder() {
        if (cityInfoBuilder_ != null) {
          return cityInfoBuilder_.getMessageOrBuilder();
        } else {
          return cityInfo_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          buffer.GCPveCityInfoMsg.CityInfo, buffer.GCPveCityInfoMsg.CityInfo.Builder, buffer.GCPveCityInfoMsg.CityInfoOrBuilder> 
          getCityInfoFieldBuilder() {
        if (cityInfoBuilder_ == null) {
          cityInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              buffer.GCPveCityInfoMsg.CityInfo, buffer.GCPveCityInfoMsg.CityInfo.Builder, buffer.GCPveCityInfoMsg.CityInfoOrBuilder>(
                  cityInfo_,
                  getParentForChildren(),
                  isClean());
          cityInfo_ = null;
        }
        return cityInfoBuilder_;
      }
      
      // optional int32 status = 6;
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000020;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // repeated int32 cityIds = 7;
      private java.util.List<java.lang.Integer> cityIds_ = java.util.Collections.emptyList();;
      private void ensureCityIdsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          cityIds_ = new java.util.ArrayList<java.lang.Integer>(cityIds_);
          bitField0_ |= 0x00000040;
         }
      }
      public java.util.List<java.lang.Integer>
          getCityIdsList() {
        return java.util.Collections.unmodifiableList(cityIds_);
      }
      public int getCityIdsCount() {
        return cityIds_.size();
      }
      public int getCityIds(int index) {
        return cityIds_.get(index);
      }
      public Builder setCityIds(
          int index, int value) {
        ensureCityIdsIsMutable();
        cityIds_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addCityIds(int value) {
        ensureCityIdsIsMutable();
        cityIds_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllCityIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCityIdsIsMutable();
        super.addAll(values, cityIds_);
        onChanged();
        return this;
      }
      public Builder clearCityIds() {
        cityIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.GCPveCityInfoProto)
    }
    
    static {
      defaultInstance = new GCPveCityInfoProto(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.GCPveCityInfoProto)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_DupInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_DupInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_CityInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_CityInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_GCPveCityInfoProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_GCPveCityInfoProto_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026GCPveCityInfoMsg.proto\022\006buffer\"9\n\007DupI" +
      "nfo\022\r\n\005dupId\030\001 \001(\005\022\016\n\006dupNum\030\002 \001(\005\022\017\n\007du" +
      "pStar\030\003 \001(\005\"<\n\010CityInfo\022\016\n\006cityId\030\001 \001(\005\022" +
      " \n\007dupInfo\030\002 \003(\0132\017.buffer.DupInfo\"\242\001\n\022GC" +
      "PveCityInfoProto\022\025\n\007msgType\030\001 \001(\005:\0047010\022" +
      "\r\n\005pveId\030\002 \001(\005\022\021\n\tpveStatus\030\003 \001(\005\022\016\n\006cit" +
      "yId\030\004 \001(\005\022\"\n\010cityInfo\030\005 \001(\0132\020.buffer.Cit" +
      "yInfo\022\016\n\006status\030\006 \001(\005\022\017\n\007cityIds\030\007 \003(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_buffer_DupInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_buffer_DupInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_DupInfo_descriptor,
              new java.lang.String[] { "DupId", "DupNum", "DupStar", },
              buffer.GCPveCityInfoMsg.DupInfo.class,
              buffer.GCPveCityInfoMsg.DupInfo.Builder.class);
          internal_static_buffer_CityInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_buffer_CityInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_CityInfo_descriptor,
              new java.lang.String[] { "CityId", "DupInfo", },
              buffer.GCPveCityInfoMsg.CityInfo.class,
              buffer.GCPveCityInfoMsg.CityInfo.Builder.class);
          internal_static_buffer_GCPveCityInfoProto_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_buffer_GCPveCityInfoProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_GCPveCityInfoProto_descriptor,
              new java.lang.String[] { "MsgType", "PveId", "PveStatus", "CityId", "CityInfo", "Status", "CityIds", },
              buffer.GCPveCityInfoMsg.GCPveCityInfoProto.class,
              buffer.GCPveCityInfoMsg.GCPveCityInfoProto.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
