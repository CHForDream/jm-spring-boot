// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GCBattlePveStart.proto

package buffer;

public final class GCBattlePveStart {
  private GCBattlePveStart() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ItemVoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 itemId = 2;
    boolean hasItemId();
    int getItemId();
    
    // optional int32 itemNum = 3;
    boolean hasItemNum();
    int getItemNum();
    
    // optional int32 freeNum = 4;
    boolean hasFreeNum();
    int getFreeNum();
  }
  public static final class ItemVo extends
      com.google.protobuf.GeneratedMessage
      implements ItemVoOrBuilder {
    // Use ItemVo.newBuilder() to construct.
    private ItemVo(Builder builder) {
      super(builder);
    }
    private ItemVo(boolean noInit) {}
    
    private static final ItemVo defaultInstance;
    public static ItemVo getDefaultInstance() {
      return defaultInstance;
    }
    
    public ItemVo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCBattlePveStart.internal_static_buffer_ItemVo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCBattlePveStart.internal_static_buffer_ItemVo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 itemId = 2;
    public static final int ITEMID_FIELD_NUMBER = 2;
    private int itemId_;
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getItemId() {
      return itemId_;
    }
    
    // optional int32 itemNum = 3;
    public static final int ITEMNUM_FIELD_NUMBER = 3;
    private int itemNum_;
    public boolean hasItemNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getItemNum() {
      return itemNum_;
    }
    
    // optional int32 freeNum = 4;
    public static final int FREENUM_FIELD_NUMBER = 4;
    private int freeNum_;
    public boolean hasFreeNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getFreeNum() {
      return freeNum_;
    }
    
    private void initFields() {
      itemId_ = 0;
      itemNum_ = 0;
      freeNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, itemId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, itemNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, freeNum_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, itemId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, itemNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, freeNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCBattlePveStart.ItemVo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCBattlePveStart.ItemVo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveStart.ItemVo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCBattlePveStart.ItemVo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveStart.ItemVo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCBattlePveStart.ItemVo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveStart.ItemVo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCBattlePveStart.ItemVo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCBattlePveStart.ItemVo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCBattlePveStart.ItemVo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCBattlePveStart.ItemVo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCBattlePveStart.ItemVoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCBattlePveStart.internal_static_buffer_ItemVo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCBattlePveStart.internal_static_buffer_ItemVo_fieldAccessorTable;
      }
      
      // Construct using buffer.GCBattlePveStart.ItemVo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        itemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        freeNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCBattlePveStart.ItemVo.getDescriptor();
      }
      
      public buffer.GCBattlePveStart.ItemVo getDefaultInstanceForType() {
        return buffer.GCBattlePveStart.ItemVo.getDefaultInstance();
      }
      
      public buffer.GCBattlePveStart.ItemVo build() {
        buffer.GCBattlePveStart.ItemVo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCBattlePveStart.ItemVo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCBattlePveStart.ItemVo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCBattlePveStart.ItemVo buildPartial() {
        buffer.GCBattlePveStart.ItemVo result = new buffer.GCBattlePveStart.ItemVo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemNum_ = itemNum_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.freeNum_ = freeNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCBattlePveStart.ItemVo) {
          return mergeFrom((buffer.GCBattlePveStart.ItemVo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCBattlePveStart.ItemVo other) {
        if (other == buffer.GCBattlePveStart.ItemVo.getDefaultInstance()) return this;
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        if (other.hasItemNum()) {
          setItemNum(other.getItemNum());
        }
        if (other.hasFreeNum()) {
          setFreeNum(other.getFreeNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              itemId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              itemNum_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              freeNum_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 itemId = 2;
      private int itemId_ ;
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getItemId() {
        return itemId_;
      }
      public Builder setItemId(int value) {
        bitField0_ |= 0x00000001;
        itemId_ = value;
        onChanged();
        return this;
      }
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 itemNum = 3;
      private int itemNum_ ;
      public boolean hasItemNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getItemNum() {
        return itemNum_;
      }
      public Builder setItemNum(int value) {
        bitField0_ |= 0x00000002;
        itemNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearItemNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemNum_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 freeNum = 4;
      private int freeNum_ ;
      public boolean hasFreeNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getFreeNum() {
        return freeNum_;
      }
      public Builder setFreeNum(int value) {
        bitField0_ |= 0x00000004;
        freeNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearFreeNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        freeNum_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.ItemVo)
    }
    
    static {
      defaultInstance = new ItemVo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.ItemVo)
  }
  
  public interface ChessVoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 chessId = 1;
    boolean hasChessId();
    int getChessId();
    
    // optional int32 chessNum = 2;
    boolean hasChessNum();
    int getChessNum();
  }
  public static final class ChessVo extends
      com.google.protobuf.GeneratedMessage
      implements ChessVoOrBuilder {
    // Use ChessVo.newBuilder() to construct.
    private ChessVo(Builder builder) {
      super(builder);
    }
    private ChessVo(boolean noInit) {}
    
    private static final ChessVo defaultInstance;
    public static ChessVo getDefaultInstance() {
      return defaultInstance;
    }
    
    public ChessVo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCBattlePveStart.internal_static_buffer_ChessVo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCBattlePveStart.internal_static_buffer_ChessVo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 chessId = 1;
    public static final int CHESSID_FIELD_NUMBER = 1;
    private int chessId_;
    public boolean hasChessId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getChessId() {
      return chessId_;
    }
    
    // optional int32 chessNum = 2;
    public static final int CHESSNUM_FIELD_NUMBER = 2;
    private int chessNum_;
    public boolean hasChessNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getChessNum() {
      return chessNum_;
    }
    
    private void initFields() {
      chessId_ = 0;
      chessNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, chessId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, chessNum_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, chessId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, chessNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCBattlePveStart.ChessVo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCBattlePveStart.ChessVo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveStart.ChessVo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCBattlePveStart.ChessVo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveStart.ChessVo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCBattlePveStart.ChessVo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveStart.ChessVo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCBattlePveStart.ChessVo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCBattlePveStart.ChessVo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCBattlePveStart.ChessVo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCBattlePveStart.ChessVo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCBattlePveStart.ChessVoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCBattlePveStart.internal_static_buffer_ChessVo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCBattlePveStart.internal_static_buffer_ChessVo_fieldAccessorTable;
      }
      
      // Construct using buffer.GCBattlePveStart.ChessVo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        chessId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        chessNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCBattlePveStart.ChessVo.getDescriptor();
      }
      
      public buffer.GCBattlePveStart.ChessVo getDefaultInstanceForType() {
        return buffer.GCBattlePveStart.ChessVo.getDefaultInstance();
      }
      
      public buffer.GCBattlePveStart.ChessVo build() {
        buffer.GCBattlePveStart.ChessVo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCBattlePveStart.ChessVo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCBattlePveStart.ChessVo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCBattlePveStart.ChessVo buildPartial() {
        buffer.GCBattlePveStart.ChessVo result = new buffer.GCBattlePveStart.ChessVo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chessId_ = chessId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.chessNum_ = chessNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCBattlePveStart.ChessVo) {
          return mergeFrom((buffer.GCBattlePveStart.ChessVo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCBattlePveStart.ChessVo other) {
        if (other == buffer.GCBattlePveStart.ChessVo.getDefaultInstance()) return this;
        if (other.hasChessId()) {
          setChessId(other.getChessId());
        }
        if (other.hasChessNum()) {
          setChessNum(other.getChessNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              chessId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              chessNum_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 chessId = 1;
      private int chessId_ ;
      public boolean hasChessId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getChessId() {
        return chessId_;
      }
      public Builder setChessId(int value) {
        bitField0_ |= 0x00000001;
        chessId_ = value;
        onChanged();
        return this;
      }
      public Builder clearChessId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chessId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 chessNum = 2;
      private int chessNum_ ;
      public boolean hasChessNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getChessNum() {
        return chessNum_;
      }
      public Builder setChessNum(int value) {
        bitField0_ |= 0x00000002;
        chessNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearChessNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chessNum_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.ChessVo)
    }
    
    static {
      defaultInstance = new ChessVo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.ChessVo)
  }
  
  public interface GCBattlePveStartProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 msgType = 1 [default = 25000];
    boolean hasMsgType();
    int getMsgType();
    
    // optional int32 status = 2;
    boolean hasStatus();
    int getStatus();
    
    // optional int32 battleType = 3;
    boolean hasBattleType();
    int getBattleType();
    
    // optional int32 targetId = 4;
    boolean hasTargetId();
    int getTargetId();
    
    // optional int32 heroId = 5;
    boolean hasHeroId();
    int getHeroId();
    
    // optional int32 petId = 6;
    boolean hasPetId();
    int getPetId();
    
    // repeated .buffer.ItemVo item = 7;
    java.util.List<buffer.GCBattlePveStart.ItemVo> 
        getItemList();
    buffer.GCBattlePveStart.ItemVo getItem(int index);
    int getItemCount();
    java.util.List<? extends buffer.GCBattlePveStart.ItemVoOrBuilder> 
        getItemOrBuilderList();
    buffer.GCBattlePveStart.ItemVoOrBuilder getItemOrBuilder(
        int index);
    
    // repeated int32 preBattleItemId = 8;
    java.util.List<java.lang.Integer> getPreBattleItemIdList();
    int getPreBattleItemIdCount();
    int getPreBattleItemId(int index);
    
    // optional int32 steps = 9;
    boolean hasSteps();
    int getSteps();
    
    // optional .buffer.ChessVo adChessVo = 10;
    boolean hasAdChessVo();
    buffer.GCBattlePveStart.ChessVo getAdChessVo();
    buffer.GCBattlePveStart.ChessVoOrBuilder getAdChessVoOrBuilder();
    
    // repeated .buffer.ChessVo conWinChessVo = 11;
    java.util.List<buffer.GCBattlePveStart.ChessVo> 
        getConWinChessVoList();
    buffer.GCBattlePveStart.ChessVo getConWinChessVo(int index);
    int getConWinChessVoCount();
    java.util.List<? extends buffer.GCBattlePveStart.ChessVoOrBuilder> 
        getConWinChessVoOrBuilderList();
    buffer.GCBattlePveStart.ChessVoOrBuilder getConWinChessVoOrBuilder(
        int index);
    
    // optional int32 pveConWinCardNum = 12;
    boolean hasPveConWinCardNum();
    int getPveConWinCardNum();
    
    // optional int32 pveConWinNum = 13;
    boolean hasPveConWinNum();
    int getPveConWinNum();
    
    // optional int32 costCash = 14;
    boolean hasCostCash();
    int getCostCash();
    
    // optional int32 addStepNum = 15;
    boolean hasAddStepNum();
    int getAddStepNum();
    
    // optional int32 pveId = 16;
    boolean hasPveId();
    int getPveId();
    
    // optional int32 dupId = 17;
    boolean hasDupId();
    int getDupId();
  }
  public static final class GCBattlePveStartProto extends
      com.google.protobuf.GeneratedMessage
      implements GCBattlePveStartProtoOrBuilder {
    // Use GCBattlePveStartProto.newBuilder() to construct.
    private GCBattlePveStartProto(Builder builder) {
      super(builder);
    }
    private GCBattlePveStartProto(boolean noInit) {}
    
    private static final GCBattlePveStartProto defaultInstance;
    public static GCBattlePveStartProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public GCBattlePveStartProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCBattlePveStart.internal_static_buffer_GCBattlePveStartProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCBattlePveStart.internal_static_buffer_GCBattlePveStartProto_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 msgType = 1 [default = 25000];
    public static final int MSGTYPE_FIELD_NUMBER = 1;
    private int msgType_;
    public boolean hasMsgType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getMsgType() {
      return msgType_;
    }
    
    // optional int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional int32 battleType = 3;
    public static final int BATTLETYPE_FIELD_NUMBER = 3;
    private int battleType_;
    public boolean hasBattleType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getBattleType() {
      return battleType_;
    }
    
    // optional int32 targetId = 4;
    public static final int TARGETID_FIELD_NUMBER = 4;
    private int targetId_;
    public boolean hasTargetId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getTargetId() {
      return targetId_;
    }
    
    // optional int32 heroId = 5;
    public static final int HEROID_FIELD_NUMBER = 5;
    private int heroId_;
    public boolean hasHeroId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getHeroId() {
      return heroId_;
    }
    
    // optional int32 petId = 6;
    public static final int PETID_FIELD_NUMBER = 6;
    private int petId_;
    public boolean hasPetId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getPetId() {
      return petId_;
    }
    
    // repeated .buffer.ItemVo item = 7;
    public static final int ITEM_FIELD_NUMBER = 7;
    private java.util.List<buffer.GCBattlePveStart.ItemVo> item_;
    public java.util.List<buffer.GCBattlePveStart.ItemVo> getItemList() {
      return item_;
    }
    public java.util.List<? extends buffer.GCBattlePveStart.ItemVoOrBuilder> 
        getItemOrBuilderList() {
      return item_;
    }
    public int getItemCount() {
      return item_.size();
    }
    public buffer.GCBattlePveStart.ItemVo getItem(int index) {
      return item_.get(index);
    }
    public buffer.GCBattlePveStart.ItemVoOrBuilder getItemOrBuilder(
        int index) {
      return item_.get(index);
    }
    
    // repeated int32 preBattleItemId = 8;
    public static final int PREBATTLEITEMID_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> preBattleItemId_;
    public java.util.List<java.lang.Integer>
        getPreBattleItemIdList() {
      return preBattleItemId_;
    }
    public int getPreBattleItemIdCount() {
      return preBattleItemId_.size();
    }
    public int getPreBattleItemId(int index) {
      return preBattleItemId_.get(index);
    }
    
    // optional int32 steps = 9;
    public static final int STEPS_FIELD_NUMBER = 9;
    private int steps_;
    public boolean hasSteps() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getSteps() {
      return steps_;
    }
    
    // optional .buffer.ChessVo adChessVo = 10;
    public static final int ADCHESSVO_FIELD_NUMBER = 10;
    private buffer.GCBattlePveStart.ChessVo adChessVo_;
    public boolean hasAdChessVo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public buffer.GCBattlePveStart.ChessVo getAdChessVo() {
      return adChessVo_;
    }
    public buffer.GCBattlePveStart.ChessVoOrBuilder getAdChessVoOrBuilder() {
      return adChessVo_;
    }
    
    // repeated .buffer.ChessVo conWinChessVo = 11;
    public static final int CONWINCHESSVO_FIELD_NUMBER = 11;
    private java.util.List<buffer.GCBattlePveStart.ChessVo> conWinChessVo_;
    public java.util.List<buffer.GCBattlePveStart.ChessVo> getConWinChessVoList() {
      return conWinChessVo_;
    }
    public java.util.List<? extends buffer.GCBattlePveStart.ChessVoOrBuilder> 
        getConWinChessVoOrBuilderList() {
      return conWinChessVo_;
    }
    public int getConWinChessVoCount() {
      return conWinChessVo_.size();
    }
    public buffer.GCBattlePveStart.ChessVo getConWinChessVo(int index) {
      return conWinChessVo_.get(index);
    }
    public buffer.GCBattlePveStart.ChessVoOrBuilder getConWinChessVoOrBuilder(
        int index) {
      return conWinChessVo_.get(index);
    }
    
    // optional int32 pveConWinCardNum = 12;
    public static final int PVECONWINCARDNUM_FIELD_NUMBER = 12;
    private int pveConWinCardNum_;
    public boolean hasPveConWinCardNum() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getPveConWinCardNum() {
      return pveConWinCardNum_;
    }
    
    // optional int32 pveConWinNum = 13;
    public static final int PVECONWINNUM_FIELD_NUMBER = 13;
    private int pveConWinNum_;
    public boolean hasPveConWinNum() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getPveConWinNum() {
      return pveConWinNum_;
    }
    
    // optional int32 costCash = 14;
    public static final int COSTCASH_FIELD_NUMBER = 14;
    private int costCash_;
    public boolean hasCostCash() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getCostCash() {
      return costCash_;
    }
    
    // optional int32 addStepNum = 15;
    public static final int ADDSTEPNUM_FIELD_NUMBER = 15;
    private int addStepNum_;
    public boolean hasAddStepNum() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getAddStepNum() {
      return addStepNum_;
    }
    
    // optional int32 pveId = 16;
    public static final int PVEID_FIELD_NUMBER = 16;
    private int pveId_;
    public boolean hasPveId() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getPveId() {
      return pveId_;
    }
    
    // optional int32 dupId = 17;
    public static final int DUPID_FIELD_NUMBER = 17;
    private int dupId_;
    public boolean hasDupId() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getDupId() {
      return dupId_;
    }
    
    private void initFields() {
      msgType_ = 25000;
      status_ = 0;
      battleType_ = 0;
      targetId_ = 0;
      heroId_ = 0;
      petId_ = 0;
      item_ = java.util.Collections.emptyList();
      preBattleItemId_ = java.util.Collections.emptyList();;
      steps_ = 0;
      adChessVo_ = buffer.GCBattlePveStart.ChessVo.getDefaultInstance();
      conWinChessVo_ = java.util.Collections.emptyList();
      pveConWinCardNum_ = 0;
      pveConWinNum_ = 0;
      costCash_ = 0;
      addStepNum_ = 0;
      pveId_ = 0;
      dupId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, msgType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, battleType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, targetId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, heroId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, petId_);
      }
      for (int i = 0; i < item_.size(); i++) {
        output.writeMessage(7, item_.get(i));
      }
      for (int i = 0; i < preBattleItemId_.size(); i++) {
        output.writeInt32(8, preBattleItemId_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, steps_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(10, adChessVo_);
      }
      for (int i = 0; i < conWinChessVo_.size(); i++) {
        output.writeMessage(11, conWinChessVo_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(12, pveConWinCardNum_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(13, pveConWinNum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(14, costCash_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(15, addStepNum_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(16, pveId_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(17, dupId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, msgType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, battleType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, targetId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, heroId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, petId_);
      }
      for (int i = 0; i < item_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, item_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < preBattleItemId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(preBattleItemId_.get(i));
        }
        size += dataSize;
        size += 1 * getPreBattleItemIdList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, steps_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, adChessVo_);
      }
      for (int i = 0; i < conWinChessVo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, conWinChessVo_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, pveConWinCardNum_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, pveConWinNum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, costCash_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, addStepNum_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, pveId_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, dupId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCBattlePveStart.GCBattlePveStartProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCBattlePveStart.GCBattlePveStartProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveStart.GCBattlePveStartProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCBattlePveStart.GCBattlePveStartProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveStart.GCBattlePveStartProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCBattlePveStart.GCBattlePveStartProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCBattlePveStart.GCBattlePveStartProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCBattlePveStart.GCBattlePveStartProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCBattlePveStart.GCBattlePveStartProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCBattlePveStart.GCBattlePveStartProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCBattlePveStart.GCBattlePveStartProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCBattlePveStart.GCBattlePveStartProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCBattlePveStart.internal_static_buffer_GCBattlePveStartProto_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCBattlePveStart.internal_static_buffer_GCBattlePveStartProto_fieldAccessorTable;
      }
      
      // Construct using buffer.GCBattlePveStart.GCBattlePveStartProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getItemFieldBuilder();
          getAdChessVoFieldBuilder();
          getConWinChessVoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        msgType_ = 25000;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        battleType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        targetId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        heroId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        petId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (itemBuilder_ == null) {
          item_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          itemBuilder_.clear();
        }
        preBattleItemId_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000080);
        steps_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (adChessVoBuilder_ == null) {
          adChessVo_ = buffer.GCBattlePveStart.ChessVo.getDefaultInstance();
        } else {
          adChessVoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (conWinChessVoBuilder_ == null) {
          conWinChessVo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          conWinChessVoBuilder_.clear();
        }
        pveConWinCardNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        pveConWinNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        costCash_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        addStepNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        pveId_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        dupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCBattlePveStart.GCBattlePveStartProto.getDescriptor();
      }
      
      public buffer.GCBattlePveStart.GCBattlePveStartProto getDefaultInstanceForType() {
        return buffer.GCBattlePveStart.GCBattlePveStartProto.getDefaultInstance();
      }
      
      public buffer.GCBattlePveStart.GCBattlePveStartProto build() {
        buffer.GCBattlePveStart.GCBattlePveStartProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCBattlePveStart.GCBattlePveStartProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCBattlePveStart.GCBattlePveStartProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCBattlePveStart.GCBattlePveStartProto buildPartial() {
        buffer.GCBattlePveStart.GCBattlePveStartProto result = new buffer.GCBattlePveStart.GCBattlePveStartProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgType_ = msgType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.battleType_ = battleType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.targetId_ = targetId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.heroId_ = heroId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.petId_ = petId_;
        if (itemBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            item_ = java.util.Collections.unmodifiableList(item_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.item_ = item_;
        } else {
          result.item_ = itemBuilder_.build();
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          preBattleItemId_ = java.util.Collections.unmodifiableList(preBattleItemId_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.preBattleItemId_ = preBattleItemId_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.steps_ = steps_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        if (adChessVoBuilder_ == null) {
          result.adChessVo_ = adChessVo_;
        } else {
          result.adChessVo_ = adChessVoBuilder_.build();
        }
        if (conWinChessVoBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            conWinChessVo_ = java.util.Collections.unmodifiableList(conWinChessVo_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.conWinChessVo_ = conWinChessVo_;
        } else {
          result.conWinChessVo_ = conWinChessVoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pveConWinCardNum_ = pveConWinCardNum_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.pveConWinNum_ = pveConWinNum_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.costCash_ = costCash_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.addStepNum_ = addStepNum_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.pveId_ = pveId_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.dupId_ = dupId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCBattlePveStart.GCBattlePveStartProto) {
          return mergeFrom((buffer.GCBattlePveStart.GCBattlePveStartProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCBattlePveStart.GCBattlePveStartProto other) {
        if (other == buffer.GCBattlePveStart.GCBattlePveStartProto.getDefaultInstance()) return this;
        if (other.hasMsgType()) {
          setMsgType(other.getMsgType());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasBattleType()) {
          setBattleType(other.getBattleType());
        }
        if (other.hasTargetId()) {
          setTargetId(other.getTargetId());
        }
        if (other.hasHeroId()) {
          setHeroId(other.getHeroId());
        }
        if (other.hasPetId()) {
          setPetId(other.getPetId());
        }
        if (itemBuilder_ == null) {
          if (!other.item_.isEmpty()) {
            if (item_.isEmpty()) {
              item_ = other.item_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureItemIsMutable();
              item_.addAll(other.item_);
            }
            onChanged();
          }
        } else {
          if (!other.item_.isEmpty()) {
            if (itemBuilder_.isEmpty()) {
              itemBuilder_.dispose();
              itemBuilder_ = null;
              item_ = other.item_;
              bitField0_ = (bitField0_ & ~0x00000040);
              itemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemFieldBuilder() : null;
            } else {
              itemBuilder_.addAllMessages(other.item_);
            }
          }
        }
        if (!other.preBattleItemId_.isEmpty()) {
          if (preBattleItemId_.isEmpty()) {
            preBattleItemId_ = other.preBattleItemId_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensurePreBattleItemIdIsMutable();
            preBattleItemId_.addAll(other.preBattleItemId_);
          }
          onChanged();
        }
        if (other.hasSteps()) {
          setSteps(other.getSteps());
        }
        if (other.hasAdChessVo()) {
          mergeAdChessVo(other.getAdChessVo());
        }
        if (conWinChessVoBuilder_ == null) {
          if (!other.conWinChessVo_.isEmpty()) {
            if (conWinChessVo_.isEmpty()) {
              conWinChessVo_ = other.conWinChessVo_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureConWinChessVoIsMutable();
              conWinChessVo_.addAll(other.conWinChessVo_);
            }
            onChanged();
          }
        } else {
          if (!other.conWinChessVo_.isEmpty()) {
            if (conWinChessVoBuilder_.isEmpty()) {
              conWinChessVoBuilder_.dispose();
              conWinChessVoBuilder_ = null;
              conWinChessVo_ = other.conWinChessVo_;
              bitField0_ = (bitField0_ & ~0x00000400);
              conWinChessVoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getConWinChessVoFieldBuilder() : null;
            } else {
              conWinChessVoBuilder_.addAllMessages(other.conWinChessVo_);
            }
          }
        }
        if (other.hasPveConWinCardNum()) {
          setPveConWinCardNum(other.getPveConWinCardNum());
        }
        if (other.hasPveConWinNum()) {
          setPveConWinNum(other.getPveConWinNum());
        }
        if (other.hasCostCash()) {
          setCostCash(other.getCostCash());
        }
        if (other.hasAddStepNum()) {
          setAddStepNum(other.getAddStepNum());
        }
        if (other.hasPveId()) {
          setPveId(other.getPveId());
        }
        if (other.hasDupId()) {
          setDupId(other.getDupId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              msgType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              battleType_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              targetId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              heroId_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              petId_ = input.readInt32();
              break;
            }
            case 58: {
              buffer.GCBattlePveStart.ItemVo.Builder subBuilder = buffer.GCBattlePveStart.ItemVo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addItem(subBuilder.buildPartial());
              break;
            }
            case 64: {
              ensurePreBattleItemIdIsMutable();
              preBattleItemId_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPreBattleItemId(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              steps_ = input.readInt32();
              break;
            }
            case 82: {
              buffer.GCBattlePveStart.ChessVo.Builder subBuilder = buffer.GCBattlePveStart.ChessVo.newBuilder();
              if (hasAdChessVo()) {
                subBuilder.mergeFrom(getAdChessVo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAdChessVo(subBuilder.buildPartial());
              break;
            }
            case 90: {
              buffer.GCBattlePveStart.ChessVo.Builder subBuilder = buffer.GCBattlePveStart.ChessVo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addConWinChessVo(subBuilder.buildPartial());
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              pveConWinCardNum_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              pveConWinNum_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              costCash_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              addStepNum_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              pveId_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              dupId_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 msgType = 1 [default = 25000];
      private int msgType_ = 25000;
      public boolean hasMsgType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getMsgType() {
        return msgType_;
      }
      public Builder setMsgType(int value) {
        bitField0_ |= 0x00000001;
        msgType_ = value;
        onChanged();
        return this;
      }
      public Builder clearMsgType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgType_ = 25000;
        onChanged();
        return this;
      }
      
      // optional int32 status = 2;
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 battleType = 3;
      private int battleType_ ;
      public boolean hasBattleType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getBattleType() {
        return battleType_;
      }
      public Builder setBattleType(int value) {
        bitField0_ |= 0x00000004;
        battleType_ = value;
        onChanged();
        return this;
      }
      public Builder clearBattleType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        battleType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 targetId = 4;
      private int targetId_ ;
      public boolean hasTargetId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getTargetId() {
        return targetId_;
      }
      public Builder setTargetId(int value) {
        bitField0_ |= 0x00000008;
        targetId_ = value;
        onChanged();
        return this;
      }
      public Builder clearTargetId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        targetId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 heroId = 5;
      private int heroId_ ;
      public boolean hasHeroId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getHeroId() {
        return heroId_;
      }
      public Builder setHeroId(int value) {
        bitField0_ |= 0x00000010;
        heroId_ = value;
        onChanged();
        return this;
      }
      public Builder clearHeroId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        heroId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 petId = 6;
      private int petId_ ;
      public boolean hasPetId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getPetId() {
        return petId_;
      }
      public Builder setPetId(int value) {
        bitField0_ |= 0x00000020;
        petId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPetId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        petId_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .buffer.ItemVo item = 7;
      private java.util.List<buffer.GCBattlePveStart.ItemVo> item_ =
        java.util.Collections.emptyList();
      private void ensureItemIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          item_ = new java.util.ArrayList<buffer.GCBattlePveStart.ItemVo>(item_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveStart.ItemVo, buffer.GCBattlePveStart.ItemVo.Builder, buffer.GCBattlePveStart.ItemVoOrBuilder> itemBuilder_;
      
      public java.util.List<buffer.GCBattlePveStart.ItemVo> getItemList() {
        if (itemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(item_);
        } else {
          return itemBuilder_.getMessageList();
        }
      }
      public int getItemCount() {
        if (itemBuilder_ == null) {
          return item_.size();
        } else {
          return itemBuilder_.getCount();
        }
      }
      public buffer.GCBattlePveStart.ItemVo getItem(int index) {
        if (itemBuilder_ == null) {
          return item_.get(index);
        } else {
          return itemBuilder_.getMessage(index);
        }
      }
      public Builder setItem(
          int index, buffer.GCBattlePveStart.ItemVo value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.set(index, value);
          onChanged();
        } else {
          itemBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setItem(
          int index, buffer.GCBattlePveStart.ItemVo.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addItem(buffer.GCBattlePveStart.ItemVo value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.add(value);
          onChanged();
        } else {
          itemBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addItem(
          int index, buffer.GCBattlePveStart.ItemVo value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.add(index, value);
          onChanged();
        } else {
          itemBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addItem(
          buffer.GCBattlePveStart.ItemVo.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.add(builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addItem(
          int index, buffer.GCBattlePveStart.ItemVo.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllItem(
          java.lang.Iterable<? extends buffer.GCBattlePveStart.ItemVo> values) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          super.addAll(values, item_);
          onChanged();
        } else {
          itemBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearItem() {
        if (itemBuilder_ == null) {
          item_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          itemBuilder_.clear();
        }
        return this;
      }
      public Builder removeItem(int index) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.remove(index);
          onChanged();
        } else {
          itemBuilder_.remove(index);
        }
        return this;
      }
      public buffer.GCBattlePveStart.ItemVo.Builder getItemBuilder(
          int index) {
        return getItemFieldBuilder().getBuilder(index);
      }
      public buffer.GCBattlePveStart.ItemVoOrBuilder getItemOrBuilder(
          int index) {
        if (itemBuilder_ == null) {
          return item_.get(index);  } else {
          return itemBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends buffer.GCBattlePveStart.ItemVoOrBuilder> 
           getItemOrBuilderList() {
        if (itemBuilder_ != null) {
          return itemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(item_);
        }
      }
      public buffer.GCBattlePveStart.ItemVo.Builder addItemBuilder() {
        return getItemFieldBuilder().addBuilder(
            buffer.GCBattlePveStart.ItemVo.getDefaultInstance());
      }
      public buffer.GCBattlePveStart.ItemVo.Builder addItemBuilder(
          int index) {
        return getItemFieldBuilder().addBuilder(
            index, buffer.GCBattlePveStart.ItemVo.getDefaultInstance());
      }
      public java.util.List<buffer.GCBattlePveStart.ItemVo.Builder> 
           getItemBuilderList() {
        return getItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveStart.ItemVo, buffer.GCBattlePveStart.ItemVo.Builder, buffer.GCBattlePveStart.ItemVoOrBuilder> 
          getItemFieldBuilder() {
        if (itemBuilder_ == null) {
          itemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              buffer.GCBattlePveStart.ItemVo, buffer.GCBattlePveStart.ItemVo.Builder, buffer.GCBattlePveStart.ItemVoOrBuilder>(
                  item_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          item_ = null;
        }
        return itemBuilder_;
      }
      
      // repeated int32 preBattleItemId = 8;
      private java.util.List<java.lang.Integer> preBattleItemId_ = java.util.Collections.emptyList();;
      private void ensurePreBattleItemIdIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          preBattleItemId_ = new java.util.ArrayList<java.lang.Integer>(preBattleItemId_);
          bitField0_ |= 0x00000080;
         }
      }
      public java.util.List<java.lang.Integer>
          getPreBattleItemIdList() {
        return java.util.Collections.unmodifiableList(preBattleItemId_);
      }
      public int getPreBattleItemIdCount() {
        return preBattleItemId_.size();
      }
      public int getPreBattleItemId(int index) {
        return preBattleItemId_.get(index);
      }
      public Builder setPreBattleItemId(
          int index, int value) {
        ensurePreBattleItemIdIsMutable();
        preBattleItemId_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addPreBattleItemId(int value) {
        ensurePreBattleItemIdIsMutable();
        preBattleItemId_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllPreBattleItemId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePreBattleItemIdIsMutable();
        super.addAll(values, preBattleItemId_);
        onChanged();
        return this;
      }
      public Builder clearPreBattleItemId() {
        preBattleItemId_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      
      // optional int32 steps = 9;
      private int steps_ ;
      public boolean hasSteps() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getSteps() {
        return steps_;
      }
      public Builder setSteps(int value) {
        bitField0_ |= 0x00000100;
        steps_ = value;
        onChanged();
        return this;
      }
      public Builder clearSteps() {
        bitField0_ = (bitField0_ & ~0x00000100);
        steps_ = 0;
        onChanged();
        return this;
      }
      
      // optional .buffer.ChessVo adChessVo = 10;
      private buffer.GCBattlePveStart.ChessVo adChessVo_ = buffer.GCBattlePveStart.ChessVo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          buffer.GCBattlePveStart.ChessVo, buffer.GCBattlePveStart.ChessVo.Builder, buffer.GCBattlePveStart.ChessVoOrBuilder> adChessVoBuilder_;
      public boolean hasAdChessVo() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public buffer.GCBattlePveStart.ChessVo getAdChessVo() {
        if (adChessVoBuilder_ == null) {
          return adChessVo_;
        } else {
          return adChessVoBuilder_.getMessage();
        }
      }
      public Builder setAdChessVo(buffer.GCBattlePveStart.ChessVo value) {
        if (adChessVoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          adChessVo_ = value;
          onChanged();
        } else {
          adChessVoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder setAdChessVo(
          buffer.GCBattlePveStart.ChessVo.Builder builderForValue) {
        if (adChessVoBuilder_ == null) {
          adChessVo_ = builderForValue.build();
          onChanged();
        } else {
          adChessVoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder mergeAdChessVo(buffer.GCBattlePveStart.ChessVo value) {
        if (adChessVoBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              adChessVo_ != buffer.GCBattlePveStart.ChessVo.getDefaultInstance()) {
            adChessVo_ =
              buffer.GCBattlePveStart.ChessVo.newBuilder(adChessVo_).mergeFrom(value).buildPartial();
          } else {
            adChessVo_ = value;
          }
          onChanged();
        } else {
          adChessVoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder clearAdChessVo() {
        if (adChessVoBuilder_ == null) {
          adChessVo_ = buffer.GCBattlePveStart.ChessVo.getDefaultInstance();
          onChanged();
        } else {
          adChessVoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      public buffer.GCBattlePveStart.ChessVo.Builder getAdChessVoBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getAdChessVoFieldBuilder().getBuilder();
      }
      public buffer.GCBattlePveStart.ChessVoOrBuilder getAdChessVoOrBuilder() {
        if (adChessVoBuilder_ != null) {
          return adChessVoBuilder_.getMessageOrBuilder();
        } else {
          return adChessVo_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          buffer.GCBattlePveStart.ChessVo, buffer.GCBattlePveStart.ChessVo.Builder, buffer.GCBattlePveStart.ChessVoOrBuilder> 
          getAdChessVoFieldBuilder() {
        if (adChessVoBuilder_ == null) {
          adChessVoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              buffer.GCBattlePveStart.ChessVo, buffer.GCBattlePveStart.ChessVo.Builder, buffer.GCBattlePveStart.ChessVoOrBuilder>(
                  adChessVo_,
                  getParentForChildren(),
                  isClean());
          adChessVo_ = null;
        }
        return adChessVoBuilder_;
      }
      
      // repeated .buffer.ChessVo conWinChessVo = 11;
      private java.util.List<buffer.GCBattlePveStart.ChessVo> conWinChessVo_ =
        java.util.Collections.emptyList();
      private void ensureConWinChessVoIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          conWinChessVo_ = new java.util.ArrayList<buffer.GCBattlePveStart.ChessVo>(conWinChessVo_);
          bitField0_ |= 0x00000400;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveStart.ChessVo, buffer.GCBattlePveStart.ChessVo.Builder, buffer.GCBattlePveStart.ChessVoOrBuilder> conWinChessVoBuilder_;
      
      public java.util.List<buffer.GCBattlePveStart.ChessVo> getConWinChessVoList() {
        if (conWinChessVoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(conWinChessVo_);
        } else {
          return conWinChessVoBuilder_.getMessageList();
        }
      }
      public int getConWinChessVoCount() {
        if (conWinChessVoBuilder_ == null) {
          return conWinChessVo_.size();
        } else {
          return conWinChessVoBuilder_.getCount();
        }
      }
      public buffer.GCBattlePveStart.ChessVo getConWinChessVo(int index) {
        if (conWinChessVoBuilder_ == null) {
          return conWinChessVo_.get(index);
        } else {
          return conWinChessVoBuilder_.getMessage(index);
        }
      }
      public Builder setConWinChessVo(
          int index, buffer.GCBattlePveStart.ChessVo value) {
        if (conWinChessVoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConWinChessVoIsMutable();
          conWinChessVo_.set(index, value);
          onChanged();
        } else {
          conWinChessVoBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setConWinChessVo(
          int index, buffer.GCBattlePveStart.ChessVo.Builder builderForValue) {
        if (conWinChessVoBuilder_ == null) {
          ensureConWinChessVoIsMutable();
          conWinChessVo_.set(index, builderForValue.build());
          onChanged();
        } else {
          conWinChessVoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addConWinChessVo(buffer.GCBattlePveStart.ChessVo value) {
        if (conWinChessVoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConWinChessVoIsMutable();
          conWinChessVo_.add(value);
          onChanged();
        } else {
          conWinChessVoBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addConWinChessVo(
          int index, buffer.GCBattlePveStart.ChessVo value) {
        if (conWinChessVoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConWinChessVoIsMutable();
          conWinChessVo_.add(index, value);
          onChanged();
        } else {
          conWinChessVoBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addConWinChessVo(
          buffer.GCBattlePveStart.ChessVo.Builder builderForValue) {
        if (conWinChessVoBuilder_ == null) {
          ensureConWinChessVoIsMutable();
          conWinChessVo_.add(builderForValue.build());
          onChanged();
        } else {
          conWinChessVoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addConWinChessVo(
          int index, buffer.GCBattlePveStart.ChessVo.Builder builderForValue) {
        if (conWinChessVoBuilder_ == null) {
          ensureConWinChessVoIsMutable();
          conWinChessVo_.add(index, builderForValue.build());
          onChanged();
        } else {
          conWinChessVoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllConWinChessVo(
          java.lang.Iterable<? extends buffer.GCBattlePveStart.ChessVo> values) {
        if (conWinChessVoBuilder_ == null) {
          ensureConWinChessVoIsMutable();
          super.addAll(values, conWinChessVo_);
          onChanged();
        } else {
          conWinChessVoBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearConWinChessVo() {
        if (conWinChessVoBuilder_ == null) {
          conWinChessVo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          conWinChessVoBuilder_.clear();
        }
        return this;
      }
      public Builder removeConWinChessVo(int index) {
        if (conWinChessVoBuilder_ == null) {
          ensureConWinChessVoIsMutable();
          conWinChessVo_.remove(index);
          onChanged();
        } else {
          conWinChessVoBuilder_.remove(index);
        }
        return this;
      }
      public buffer.GCBattlePveStart.ChessVo.Builder getConWinChessVoBuilder(
          int index) {
        return getConWinChessVoFieldBuilder().getBuilder(index);
      }
      public buffer.GCBattlePveStart.ChessVoOrBuilder getConWinChessVoOrBuilder(
          int index) {
        if (conWinChessVoBuilder_ == null) {
          return conWinChessVo_.get(index);  } else {
          return conWinChessVoBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends buffer.GCBattlePveStart.ChessVoOrBuilder> 
           getConWinChessVoOrBuilderList() {
        if (conWinChessVoBuilder_ != null) {
          return conWinChessVoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(conWinChessVo_);
        }
      }
      public buffer.GCBattlePveStart.ChessVo.Builder addConWinChessVoBuilder() {
        return getConWinChessVoFieldBuilder().addBuilder(
            buffer.GCBattlePveStart.ChessVo.getDefaultInstance());
      }
      public buffer.GCBattlePveStart.ChessVo.Builder addConWinChessVoBuilder(
          int index) {
        return getConWinChessVoFieldBuilder().addBuilder(
            index, buffer.GCBattlePveStart.ChessVo.getDefaultInstance());
      }
      public java.util.List<buffer.GCBattlePveStart.ChessVo.Builder> 
           getConWinChessVoBuilderList() {
        return getConWinChessVoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCBattlePveStart.ChessVo, buffer.GCBattlePveStart.ChessVo.Builder, buffer.GCBattlePveStart.ChessVoOrBuilder> 
          getConWinChessVoFieldBuilder() {
        if (conWinChessVoBuilder_ == null) {
          conWinChessVoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              buffer.GCBattlePveStart.ChessVo, buffer.GCBattlePveStart.ChessVo.Builder, buffer.GCBattlePveStart.ChessVoOrBuilder>(
                  conWinChessVo_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          conWinChessVo_ = null;
        }
        return conWinChessVoBuilder_;
      }
      
      // optional int32 pveConWinCardNum = 12;
      private int pveConWinCardNum_ ;
      public boolean hasPveConWinCardNum() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getPveConWinCardNum() {
        return pveConWinCardNum_;
      }
      public Builder setPveConWinCardNum(int value) {
        bitField0_ |= 0x00000800;
        pveConWinCardNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearPveConWinCardNum() {
        bitField0_ = (bitField0_ & ~0x00000800);
        pveConWinCardNum_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 pveConWinNum = 13;
      private int pveConWinNum_ ;
      public boolean hasPveConWinNum() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getPveConWinNum() {
        return pveConWinNum_;
      }
      public Builder setPveConWinNum(int value) {
        bitField0_ |= 0x00001000;
        pveConWinNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearPveConWinNum() {
        bitField0_ = (bitField0_ & ~0x00001000);
        pveConWinNum_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 costCash = 14;
      private int costCash_ ;
      public boolean hasCostCash() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getCostCash() {
        return costCash_;
      }
      public Builder setCostCash(int value) {
        bitField0_ |= 0x00002000;
        costCash_ = value;
        onChanged();
        return this;
      }
      public Builder clearCostCash() {
        bitField0_ = (bitField0_ & ~0x00002000);
        costCash_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 addStepNum = 15;
      private int addStepNum_ ;
      public boolean hasAddStepNum() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public int getAddStepNum() {
        return addStepNum_;
      }
      public Builder setAddStepNum(int value) {
        bitField0_ |= 0x00004000;
        addStepNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddStepNum() {
        bitField0_ = (bitField0_ & ~0x00004000);
        addStepNum_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 pveId = 16;
      private int pveId_ ;
      public boolean hasPveId() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getPveId() {
        return pveId_;
      }
      public Builder setPveId(int value) {
        bitField0_ |= 0x00008000;
        pveId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPveId() {
        bitField0_ = (bitField0_ & ~0x00008000);
        pveId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 dupId = 17;
      private int dupId_ ;
      public boolean hasDupId() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public int getDupId() {
        return dupId_;
      }
      public Builder setDupId(int value) {
        bitField0_ |= 0x00010000;
        dupId_ = value;
        onChanged();
        return this;
      }
      public Builder clearDupId() {
        bitField0_ = (bitField0_ & ~0x00010000);
        dupId_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.GCBattlePveStartProto)
    }
    
    static {
      defaultInstance = new GCBattlePveStartProto(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.GCBattlePveStartProto)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_ItemVo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_ItemVo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_ChessVo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_ChessVo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_GCBattlePveStartProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_GCBattlePveStartProto_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026GCBattlePveStart.proto\022\006buffer\":\n\006Item" +
      "Vo\022\016\n\006itemId\030\002 \001(\005\022\017\n\007itemNum\030\003 \001(\005\022\017\n\007f" +
      "reeNum\030\004 \001(\005\",\n\007ChessVo\022\017\n\007chessId\030\001 \001(\005" +
      "\022\020\n\010chessNum\030\002 \001(\005\"\212\003\n\025GCBattlePveStartP" +
      "roto\022\026\n\007msgType\030\001 \001(\005:\00525000\022\016\n\006status\030\002" +
      " \001(\005\022\022\n\nbattleType\030\003 \001(\005\022\020\n\010targetId\030\004 \001" +
      "(\005\022\016\n\006heroId\030\005 \001(\005\022\r\n\005petId\030\006 \001(\005\022\034\n\004ite" +
      "m\030\007 \003(\0132\016.buffer.ItemVo\022\027\n\017preBattleItem" +
      "Id\030\010 \003(\005\022\r\n\005steps\030\t \001(\005\022\"\n\tadChessVo\030\n \001" +
      "(\0132\017.buffer.ChessVo\022&\n\rconWinChessVo\030\013 \003",
      "(\0132\017.buffer.ChessVo\022\030\n\020pveConWinCardNum\030" +
      "\014 \001(\005\022\024\n\014pveConWinNum\030\r \001(\005\022\020\n\010costCash\030" +
      "\016 \001(\005\022\022\n\naddStepNum\030\017 \001(\005\022\r\n\005pveId\030\020 \001(\005" +
      "\022\r\n\005dupId\030\021 \001(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_buffer_ItemVo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_buffer_ItemVo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_ItemVo_descriptor,
              new java.lang.String[] { "ItemId", "ItemNum", "FreeNum", },
              buffer.GCBattlePveStart.ItemVo.class,
              buffer.GCBattlePveStart.ItemVo.Builder.class);
          internal_static_buffer_ChessVo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_buffer_ChessVo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_ChessVo_descriptor,
              new java.lang.String[] { "ChessId", "ChessNum", },
              buffer.GCBattlePveStart.ChessVo.class,
              buffer.GCBattlePveStart.ChessVo.Builder.class);
          internal_static_buffer_GCBattlePveStartProto_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_buffer_GCBattlePveStartProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_GCBattlePveStartProto_descriptor,
              new java.lang.String[] { "MsgType", "Status", "BattleType", "TargetId", "HeroId", "PetId", "Item", "PreBattleItemId", "Steps", "AdChessVo", "ConWinChessVo", "PveConWinCardNum", "PveConWinNum", "CostCash", "AddStepNum", "PveId", "DupId", },
              buffer.GCBattlePveStart.GCBattlePveStartProto.class,
              buffer.GCBattlePveStart.GCBattlePveStartProto.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
