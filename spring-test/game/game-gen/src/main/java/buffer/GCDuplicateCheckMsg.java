// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GCDuplicateCheckMsg.proto

package buffer;

public final class GCDuplicateCheckMsg {
  private GCDuplicateCheckMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GCDuplicateCheckProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 msgType = 1 [default = 25102];
    boolean hasMsgType();
    int getMsgType();
    
    // optional int32 cityId = 2;
    boolean hasCityId();
    int getCityId();
    
    // optional int32 dupId = 3;
    boolean hasDupId();
    int getDupId();
    
    // optional int32 index = 4;
    boolean hasIndex();
    int getIndex();
    
    // optional int32 status = 5;
    boolean hasStatus();
    int getStatus();
    
    // optional int32 coinNum = 6;
    boolean hasCoinNum();
    int getCoinNum();
    
    // optional int32 diamondNum = 7;
    boolean hasDiamondNum();
    int getDiamondNum();
  }
  public static final class GCDuplicateCheckProto extends
      com.google.protobuf.GeneratedMessage
      implements GCDuplicateCheckProtoOrBuilder {
    // Use GCDuplicateCheckProto.newBuilder() to construct.
    private GCDuplicateCheckProto(Builder builder) {
      super(builder);
    }
    private GCDuplicateCheckProto(boolean noInit) {}
    
    private static final GCDuplicateCheckProto defaultInstance;
    public static GCDuplicateCheckProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public GCDuplicateCheckProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCDuplicateCheckMsg.internal_static_buffer_GCDuplicateCheckProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCDuplicateCheckMsg.internal_static_buffer_GCDuplicateCheckProto_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 msgType = 1 [default = 25102];
    public static final int MSGTYPE_FIELD_NUMBER = 1;
    private int msgType_;
    public boolean hasMsgType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getMsgType() {
      return msgType_;
    }
    
    // optional int32 cityId = 2;
    public static final int CITYID_FIELD_NUMBER = 2;
    private int cityId_;
    public boolean hasCityId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getCityId() {
      return cityId_;
    }
    
    // optional int32 dupId = 3;
    public static final int DUPID_FIELD_NUMBER = 3;
    private int dupId_;
    public boolean hasDupId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getDupId() {
      return dupId_;
    }
    
    // optional int32 index = 4;
    public static final int INDEX_FIELD_NUMBER = 4;
    private int index_;
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getIndex() {
      return index_;
    }
    
    // optional int32 status = 5;
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional int32 coinNum = 6;
    public static final int COINNUM_FIELD_NUMBER = 6;
    private int coinNum_;
    public boolean hasCoinNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getCoinNum() {
      return coinNum_;
    }
    
    // optional int32 diamondNum = 7;
    public static final int DIAMONDNUM_FIELD_NUMBER = 7;
    private int diamondNum_;
    public boolean hasDiamondNum() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getDiamondNum() {
      return diamondNum_;
    }
    
    private void initFields() {
      msgType_ = 25102;
      cityId_ = 0;
      dupId_ = 0;
      index_ = 0;
      status_ = 0;
      coinNum_ = 0;
      diamondNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, msgType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cityId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, dupId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, index_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, coinNum_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, diamondNum_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, msgType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cityId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, dupId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, index_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, coinNum_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, diamondNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCDuplicateCheckMsg.GCDuplicateCheckProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCDuplicateCheckMsg.internal_static_buffer_GCDuplicateCheckProto_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCDuplicateCheckMsg.internal_static_buffer_GCDuplicateCheckProto_fieldAccessorTable;
      }
      
      // Construct using buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        msgType_ = 25102;
        bitField0_ = (bitField0_ & ~0x00000001);
        cityId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        dupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        coinNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        diamondNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto.getDescriptor();
      }
      
      public buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto getDefaultInstanceForType() {
        return buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto.getDefaultInstance();
      }
      
      public buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto build() {
        buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto buildPartial() {
        buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto result = new buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgType_ = msgType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cityId_ = cityId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dupId_ = dupId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.coinNum_ = coinNum_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.diamondNum_ = diamondNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto) {
          return mergeFrom((buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto other) {
        if (other == buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto.getDefaultInstance()) return this;
        if (other.hasMsgType()) {
          setMsgType(other.getMsgType());
        }
        if (other.hasCityId()) {
          setCityId(other.getCityId());
        }
        if (other.hasDupId()) {
          setDupId(other.getDupId());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasCoinNum()) {
          setCoinNum(other.getCoinNum());
        }
        if (other.hasDiamondNum()) {
          setDiamondNum(other.getDiamondNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              msgType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cityId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              dupId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              index_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              coinNum_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              diamondNum_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 msgType = 1 [default = 25102];
      private int msgType_ = 25102;
      public boolean hasMsgType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getMsgType() {
        return msgType_;
      }
      public Builder setMsgType(int value) {
        bitField0_ |= 0x00000001;
        msgType_ = value;
        onChanged();
        return this;
      }
      public Builder clearMsgType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgType_ = 25102;
        onChanged();
        return this;
      }
      
      // optional int32 cityId = 2;
      private int cityId_ ;
      public boolean hasCityId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getCityId() {
        return cityId_;
      }
      public Builder setCityId(int value) {
        bitField0_ |= 0x00000002;
        cityId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCityId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cityId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 dupId = 3;
      private int dupId_ ;
      public boolean hasDupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getDupId() {
        return dupId_;
      }
      public Builder setDupId(int value) {
        bitField0_ |= 0x00000004;
        dupId_ = value;
        onChanged();
        return this;
      }
      public Builder clearDupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dupId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 index = 4;
      private int index_ ;
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getIndex() {
        return index_;
      }
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000008;
        index_ = value;
        onChanged();
        return this;
      }
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        index_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5;
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 coinNum = 6;
      private int coinNum_ ;
      public boolean hasCoinNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getCoinNum() {
        return coinNum_;
      }
      public Builder setCoinNum(int value) {
        bitField0_ |= 0x00000020;
        coinNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearCoinNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        coinNum_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 diamondNum = 7;
      private int diamondNum_ ;
      public boolean hasDiamondNum() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getDiamondNum() {
        return diamondNum_;
      }
      public Builder setDiamondNum(int value) {
        bitField0_ |= 0x00000040;
        diamondNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearDiamondNum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        diamondNum_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.GCDuplicateCheckProto)
    }
    
    static {
      defaultInstance = new GCDuplicateCheckProto(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.GCDuplicateCheckProto)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_GCDuplicateCheckProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_GCDuplicateCheckProto_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031GCDuplicateCheckMsg.proto\022\006buffer\"\222\001\n\025" +
      "GCDuplicateCheckProto\022\026\n\007msgType\030\001 \001(\005:\005" +
      "25102\022\016\n\006cityId\030\002 \001(\005\022\r\n\005dupId\030\003 \001(\005\022\r\n\005" +
      "index\030\004 \001(\005\022\016\n\006status\030\005 \001(\005\022\017\n\007coinNum\030\006" +
      " \001(\005\022\022\n\ndiamondNum\030\007 \001(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_buffer_GCDuplicateCheckProto_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_buffer_GCDuplicateCheckProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_GCDuplicateCheckProto_descriptor,
              new java.lang.String[] { "MsgType", "CityId", "DupId", "Index", "Status", "CoinNum", "DiamondNum", },
              buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto.class,
              buffer.GCDuplicateCheckMsg.GCDuplicateCheckProto.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
