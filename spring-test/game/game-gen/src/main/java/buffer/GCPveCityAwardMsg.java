// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GCPveCityAwardMsg.proto

package buffer;

public final class GCPveCityAwardMsg {
  private GCPveCityAwardMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RewardInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 itemType = 1;
    boolean hasItemType();
    int getItemType();
    
    // optional int32 itemId = 2;
    boolean hasItemId();
    int getItemId();
    
    // optional int32 itemNum = 3;
    boolean hasItemNum();
    int getItemNum();
  }
  public static final class RewardInfo extends
      com.google.protobuf.GeneratedMessage
      implements RewardInfoOrBuilder {
    // Use RewardInfo.newBuilder() to construct.
    private RewardInfo(Builder builder) {
      super(builder);
    }
    private RewardInfo(boolean noInit) {}
    
    private static final RewardInfo defaultInstance;
    public static RewardInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public RewardInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCPveCityAwardMsg.internal_static_buffer_RewardInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCPveCityAwardMsg.internal_static_buffer_RewardInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 itemType = 1;
    public static final int ITEMTYPE_FIELD_NUMBER = 1;
    private int itemType_;
    public boolean hasItemType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getItemType() {
      return itemType_;
    }
    
    // optional int32 itemId = 2;
    public static final int ITEMID_FIELD_NUMBER = 2;
    private int itemId_;
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getItemId() {
      return itemId_;
    }
    
    // optional int32 itemNum = 3;
    public static final int ITEMNUM_FIELD_NUMBER = 3;
    private int itemNum_;
    public boolean hasItemNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getItemNum() {
      return itemNum_;
    }
    
    private void initFields() {
      itemType_ = 0;
      itemId_ = 0;
      itemNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, itemType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, itemId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, itemNum_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, itemType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, itemId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, itemNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCPveCityAwardMsg.RewardInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.RewardInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.RewardInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.RewardInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.RewardInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.RewardInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.RewardInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCPveCityAwardMsg.RewardInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCPveCityAwardMsg.RewardInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.RewardInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCPveCityAwardMsg.RewardInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCPveCityAwardMsg.RewardInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCPveCityAwardMsg.internal_static_buffer_RewardInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCPveCityAwardMsg.internal_static_buffer_RewardInfo_fieldAccessorTable;
      }
      
      // Construct using buffer.GCPveCityAwardMsg.RewardInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        itemType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        itemNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCPveCityAwardMsg.RewardInfo.getDescriptor();
      }
      
      public buffer.GCPveCityAwardMsg.RewardInfo getDefaultInstanceForType() {
        return buffer.GCPveCityAwardMsg.RewardInfo.getDefaultInstance();
      }
      
      public buffer.GCPveCityAwardMsg.RewardInfo build() {
        buffer.GCPveCityAwardMsg.RewardInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCPveCityAwardMsg.RewardInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCPveCityAwardMsg.RewardInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCPveCityAwardMsg.RewardInfo buildPartial() {
        buffer.GCPveCityAwardMsg.RewardInfo result = new buffer.GCPveCityAwardMsg.RewardInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemType_ = itemType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.itemNum_ = itemNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCPveCityAwardMsg.RewardInfo) {
          return mergeFrom((buffer.GCPveCityAwardMsg.RewardInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCPveCityAwardMsg.RewardInfo other) {
        if (other == buffer.GCPveCityAwardMsg.RewardInfo.getDefaultInstance()) return this;
        if (other.hasItemType()) {
          setItemType(other.getItemType());
        }
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        if (other.hasItemNum()) {
          setItemNum(other.getItemNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              itemType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              itemNum_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 itemType = 1;
      private int itemType_ ;
      public boolean hasItemType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getItemType() {
        return itemType_;
      }
      public Builder setItemType(int value) {
        bitField0_ |= 0x00000001;
        itemType_ = value;
        onChanged();
        return this;
      }
      public Builder clearItemType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 itemId = 2;
      private int itemId_ ;
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getItemId() {
        return itemId_;
      }
      public Builder setItemId(int value) {
        bitField0_ |= 0x00000002;
        itemId_ = value;
        onChanged();
        return this;
      }
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 itemNum = 3;
      private int itemNum_ ;
      public boolean hasItemNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getItemNum() {
        return itemNum_;
      }
      public Builder setItemNum(int value) {
        bitField0_ |= 0x00000004;
        itemNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearItemNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        itemNum_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.RewardInfo)
    }
    
    static {
      defaultInstance = new RewardInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.RewardInfo)
  }
  
  public interface GCPveCityAwardProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 msgType = 1 [default = 7013];
    boolean hasMsgType();
    int getMsgType();
    
    // repeated .buffer.RewardInfo hardAwards = 2;
    java.util.List<buffer.GCPveCityAwardMsg.RewardInfo> 
        getHardAwardsList();
    buffer.GCPveCityAwardMsg.RewardInfo getHardAwards(int index);
    int getHardAwardsCount();
    java.util.List<? extends buffer.GCPveCityAwardMsg.RewardInfoOrBuilder> 
        getHardAwardsOrBuilderList();
    buffer.GCPveCityAwardMsg.RewardInfoOrBuilder getHardAwardsOrBuilder(
        int index);
    
    // repeated .buffer.RewardInfo chessAwards = 3;
    java.util.List<buffer.GCPveCityAwardMsg.RewardInfo> 
        getChessAwardsList();
    buffer.GCPveCityAwardMsg.RewardInfo getChessAwards(int index);
    int getChessAwardsCount();
    java.util.List<? extends buffer.GCPveCityAwardMsg.RewardInfoOrBuilder> 
        getChessAwardsOrBuilderList();
    buffer.GCPveCityAwardMsg.RewardInfoOrBuilder getChessAwardsOrBuilder(
        int index);
  }
  public static final class GCPveCityAwardProto extends
      com.google.protobuf.GeneratedMessage
      implements GCPveCityAwardProtoOrBuilder {
    // Use GCPveCityAwardProto.newBuilder() to construct.
    private GCPveCityAwardProto(Builder builder) {
      super(builder);
    }
    private GCPveCityAwardProto(boolean noInit) {}
    
    private static final GCPveCityAwardProto defaultInstance;
    public static GCPveCityAwardProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public GCPveCityAwardProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffer.GCPveCityAwardMsg.internal_static_buffer_GCPveCityAwardProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffer.GCPveCityAwardMsg.internal_static_buffer_GCPveCityAwardProto_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 msgType = 1 [default = 7013];
    public static final int MSGTYPE_FIELD_NUMBER = 1;
    private int msgType_;
    public boolean hasMsgType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getMsgType() {
      return msgType_;
    }
    
    // repeated .buffer.RewardInfo hardAwards = 2;
    public static final int HARDAWARDS_FIELD_NUMBER = 2;
    private java.util.List<buffer.GCPveCityAwardMsg.RewardInfo> hardAwards_;
    public java.util.List<buffer.GCPveCityAwardMsg.RewardInfo> getHardAwardsList() {
      return hardAwards_;
    }
    public java.util.List<? extends buffer.GCPveCityAwardMsg.RewardInfoOrBuilder> 
        getHardAwardsOrBuilderList() {
      return hardAwards_;
    }
    public int getHardAwardsCount() {
      return hardAwards_.size();
    }
    public buffer.GCPveCityAwardMsg.RewardInfo getHardAwards(int index) {
      return hardAwards_.get(index);
    }
    public buffer.GCPveCityAwardMsg.RewardInfoOrBuilder getHardAwardsOrBuilder(
        int index) {
      return hardAwards_.get(index);
    }
    
    // repeated .buffer.RewardInfo chessAwards = 3;
    public static final int CHESSAWARDS_FIELD_NUMBER = 3;
    private java.util.List<buffer.GCPveCityAwardMsg.RewardInfo> chessAwards_;
    public java.util.List<buffer.GCPveCityAwardMsg.RewardInfo> getChessAwardsList() {
      return chessAwards_;
    }
    public java.util.List<? extends buffer.GCPveCityAwardMsg.RewardInfoOrBuilder> 
        getChessAwardsOrBuilderList() {
      return chessAwards_;
    }
    public int getChessAwardsCount() {
      return chessAwards_.size();
    }
    public buffer.GCPveCityAwardMsg.RewardInfo getChessAwards(int index) {
      return chessAwards_.get(index);
    }
    public buffer.GCPveCityAwardMsg.RewardInfoOrBuilder getChessAwardsOrBuilder(
        int index) {
      return chessAwards_.get(index);
    }
    
    private void initFields() {
      msgType_ = 7013;
      hardAwards_ = java.util.Collections.emptyList();
      chessAwards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, msgType_);
      }
      for (int i = 0; i < hardAwards_.size(); i++) {
        output.writeMessage(2, hardAwards_.get(i));
      }
      for (int i = 0; i < chessAwards_.size(); i++) {
        output.writeMessage(3, chessAwards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, msgType_);
      }
      for (int i = 0; i < hardAwards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, hardAwards_.get(i));
      }
      for (int i = 0; i < chessAwards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, chessAwards_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static buffer.GCPveCityAwardMsg.GCPveCityAwardProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.GCPveCityAwardProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.GCPveCityAwardProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.GCPveCityAwardProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.GCPveCityAwardProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.GCPveCityAwardProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.GCPveCityAwardProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCPveCityAwardMsg.GCPveCityAwardProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static buffer.GCPveCityAwardMsg.GCPveCityAwardProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static buffer.GCPveCityAwardMsg.GCPveCityAwardProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(buffer.GCPveCityAwardMsg.GCPveCityAwardProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements buffer.GCPveCityAwardMsg.GCPveCityAwardProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffer.GCPveCityAwardMsg.internal_static_buffer_GCPveCityAwardProto_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffer.GCPveCityAwardMsg.internal_static_buffer_GCPveCityAwardProto_fieldAccessorTable;
      }
      
      // Construct using buffer.GCPveCityAwardMsg.GCPveCityAwardProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHardAwardsFieldBuilder();
          getChessAwardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        msgType_ = 7013;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (hardAwardsBuilder_ == null) {
          hardAwards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          hardAwardsBuilder_.clear();
        }
        if (chessAwardsBuilder_ == null) {
          chessAwards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          chessAwardsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffer.GCPveCityAwardMsg.GCPveCityAwardProto.getDescriptor();
      }
      
      public buffer.GCPveCityAwardMsg.GCPveCityAwardProto getDefaultInstanceForType() {
        return buffer.GCPveCityAwardMsg.GCPveCityAwardProto.getDefaultInstance();
      }
      
      public buffer.GCPveCityAwardMsg.GCPveCityAwardProto build() {
        buffer.GCPveCityAwardMsg.GCPveCityAwardProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private buffer.GCPveCityAwardMsg.GCPveCityAwardProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        buffer.GCPveCityAwardMsg.GCPveCityAwardProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public buffer.GCPveCityAwardMsg.GCPveCityAwardProto buildPartial() {
        buffer.GCPveCityAwardMsg.GCPveCityAwardProto result = new buffer.GCPveCityAwardMsg.GCPveCityAwardProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgType_ = msgType_;
        if (hardAwardsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            hardAwards_ = java.util.Collections.unmodifiableList(hardAwards_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.hardAwards_ = hardAwards_;
        } else {
          result.hardAwards_ = hardAwardsBuilder_.build();
        }
        if (chessAwardsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            chessAwards_ = java.util.Collections.unmodifiableList(chessAwards_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.chessAwards_ = chessAwards_;
        } else {
          result.chessAwards_ = chessAwardsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffer.GCPveCityAwardMsg.GCPveCityAwardProto) {
          return mergeFrom((buffer.GCPveCityAwardMsg.GCPveCityAwardProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(buffer.GCPveCityAwardMsg.GCPveCityAwardProto other) {
        if (other == buffer.GCPveCityAwardMsg.GCPveCityAwardProto.getDefaultInstance()) return this;
        if (other.hasMsgType()) {
          setMsgType(other.getMsgType());
        }
        if (hardAwardsBuilder_ == null) {
          if (!other.hardAwards_.isEmpty()) {
            if (hardAwards_.isEmpty()) {
              hardAwards_ = other.hardAwards_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHardAwardsIsMutable();
              hardAwards_.addAll(other.hardAwards_);
            }
            onChanged();
          }
        } else {
          if (!other.hardAwards_.isEmpty()) {
            if (hardAwardsBuilder_.isEmpty()) {
              hardAwardsBuilder_.dispose();
              hardAwardsBuilder_ = null;
              hardAwards_ = other.hardAwards_;
              bitField0_ = (bitField0_ & ~0x00000002);
              hardAwardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHardAwardsFieldBuilder() : null;
            } else {
              hardAwardsBuilder_.addAllMessages(other.hardAwards_);
            }
          }
        }
        if (chessAwardsBuilder_ == null) {
          if (!other.chessAwards_.isEmpty()) {
            if (chessAwards_.isEmpty()) {
              chessAwards_ = other.chessAwards_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureChessAwardsIsMutable();
              chessAwards_.addAll(other.chessAwards_);
            }
            onChanged();
          }
        } else {
          if (!other.chessAwards_.isEmpty()) {
            if (chessAwardsBuilder_.isEmpty()) {
              chessAwardsBuilder_.dispose();
              chessAwardsBuilder_ = null;
              chessAwards_ = other.chessAwards_;
              bitField0_ = (bitField0_ & ~0x00000004);
              chessAwardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChessAwardsFieldBuilder() : null;
            } else {
              chessAwardsBuilder_.addAllMessages(other.chessAwards_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              msgType_ = input.readInt32();
              break;
            }
            case 18: {
              buffer.GCPveCityAwardMsg.RewardInfo.Builder subBuilder = buffer.GCPveCityAwardMsg.RewardInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHardAwards(subBuilder.buildPartial());
              break;
            }
            case 26: {
              buffer.GCPveCityAwardMsg.RewardInfo.Builder subBuilder = buffer.GCPveCityAwardMsg.RewardInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addChessAwards(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 msgType = 1 [default = 7013];
      private int msgType_ = 7013;
      public boolean hasMsgType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getMsgType() {
        return msgType_;
      }
      public Builder setMsgType(int value) {
        bitField0_ |= 0x00000001;
        msgType_ = value;
        onChanged();
        return this;
      }
      public Builder clearMsgType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgType_ = 7013;
        onChanged();
        return this;
      }
      
      // repeated .buffer.RewardInfo hardAwards = 2;
      private java.util.List<buffer.GCPveCityAwardMsg.RewardInfo> hardAwards_ =
        java.util.Collections.emptyList();
      private void ensureHardAwardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          hardAwards_ = new java.util.ArrayList<buffer.GCPveCityAwardMsg.RewardInfo>(hardAwards_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCPveCityAwardMsg.RewardInfo, buffer.GCPveCityAwardMsg.RewardInfo.Builder, buffer.GCPveCityAwardMsg.RewardInfoOrBuilder> hardAwardsBuilder_;
      
      public java.util.List<buffer.GCPveCityAwardMsg.RewardInfo> getHardAwardsList() {
        if (hardAwardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hardAwards_);
        } else {
          return hardAwardsBuilder_.getMessageList();
        }
      }
      public int getHardAwardsCount() {
        if (hardAwardsBuilder_ == null) {
          return hardAwards_.size();
        } else {
          return hardAwardsBuilder_.getCount();
        }
      }
      public buffer.GCPveCityAwardMsg.RewardInfo getHardAwards(int index) {
        if (hardAwardsBuilder_ == null) {
          return hardAwards_.get(index);
        } else {
          return hardAwardsBuilder_.getMessage(index);
        }
      }
      public Builder setHardAwards(
          int index, buffer.GCPveCityAwardMsg.RewardInfo value) {
        if (hardAwardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHardAwardsIsMutable();
          hardAwards_.set(index, value);
          onChanged();
        } else {
          hardAwardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setHardAwards(
          int index, buffer.GCPveCityAwardMsg.RewardInfo.Builder builderForValue) {
        if (hardAwardsBuilder_ == null) {
          ensureHardAwardsIsMutable();
          hardAwards_.set(index, builderForValue.build());
          onChanged();
        } else {
          hardAwardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addHardAwards(buffer.GCPveCityAwardMsg.RewardInfo value) {
        if (hardAwardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHardAwardsIsMutable();
          hardAwards_.add(value);
          onChanged();
        } else {
          hardAwardsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addHardAwards(
          int index, buffer.GCPveCityAwardMsg.RewardInfo value) {
        if (hardAwardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHardAwardsIsMutable();
          hardAwards_.add(index, value);
          onChanged();
        } else {
          hardAwardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addHardAwards(
          buffer.GCPveCityAwardMsg.RewardInfo.Builder builderForValue) {
        if (hardAwardsBuilder_ == null) {
          ensureHardAwardsIsMutable();
          hardAwards_.add(builderForValue.build());
          onChanged();
        } else {
          hardAwardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addHardAwards(
          int index, buffer.GCPveCityAwardMsg.RewardInfo.Builder builderForValue) {
        if (hardAwardsBuilder_ == null) {
          ensureHardAwardsIsMutable();
          hardAwards_.add(index, builderForValue.build());
          onChanged();
        } else {
          hardAwardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllHardAwards(
          java.lang.Iterable<? extends buffer.GCPveCityAwardMsg.RewardInfo> values) {
        if (hardAwardsBuilder_ == null) {
          ensureHardAwardsIsMutable();
          super.addAll(values, hardAwards_);
          onChanged();
        } else {
          hardAwardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearHardAwards() {
        if (hardAwardsBuilder_ == null) {
          hardAwards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          hardAwardsBuilder_.clear();
        }
        return this;
      }
      public Builder removeHardAwards(int index) {
        if (hardAwardsBuilder_ == null) {
          ensureHardAwardsIsMutable();
          hardAwards_.remove(index);
          onChanged();
        } else {
          hardAwardsBuilder_.remove(index);
        }
        return this;
      }
      public buffer.GCPveCityAwardMsg.RewardInfo.Builder getHardAwardsBuilder(
          int index) {
        return getHardAwardsFieldBuilder().getBuilder(index);
      }
      public buffer.GCPveCityAwardMsg.RewardInfoOrBuilder getHardAwardsOrBuilder(
          int index) {
        if (hardAwardsBuilder_ == null) {
          return hardAwards_.get(index);  } else {
          return hardAwardsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends buffer.GCPveCityAwardMsg.RewardInfoOrBuilder> 
           getHardAwardsOrBuilderList() {
        if (hardAwardsBuilder_ != null) {
          return hardAwardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hardAwards_);
        }
      }
      public buffer.GCPveCityAwardMsg.RewardInfo.Builder addHardAwardsBuilder() {
        return getHardAwardsFieldBuilder().addBuilder(
            buffer.GCPveCityAwardMsg.RewardInfo.getDefaultInstance());
      }
      public buffer.GCPveCityAwardMsg.RewardInfo.Builder addHardAwardsBuilder(
          int index) {
        return getHardAwardsFieldBuilder().addBuilder(
            index, buffer.GCPveCityAwardMsg.RewardInfo.getDefaultInstance());
      }
      public java.util.List<buffer.GCPveCityAwardMsg.RewardInfo.Builder> 
           getHardAwardsBuilderList() {
        return getHardAwardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCPveCityAwardMsg.RewardInfo, buffer.GCPveCityAwardMsg.RewardInfo.Builder, buffer.GCPveCityAwardMsg.RewardInfoOrBuilder> 
          getHardAwardsFieldBuilder() {
        if (hardAwardsBuilder_ == null) {
          hardAwardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              buffer.GCPveCityAwardMsg.RewardInfo, buffer.GCPveCityAwardMsg.RewardInfo.Builder, buffer.GCPveCityAwardMsg.RewardInfoOrBuilder>(
                  hardAwards_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          hardAwards_ = null;
        }
        return hardAwardsBuilder_;
      }
      
      // repeated .buffer.RewardInfo chessAwards = 3;
      private java.util.List<buffer.GCPveCityAwardMsg.RewardInfo> chessAwards_ =
        java.util.Collections.emptyList();
      private void ensureChessAwardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          chessAwards_ = new java.util.ArrayList<buffer.GCPveCityAwardMsg.RewardInfo>(chessAwards_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCPveCityAwardMsg.RewardInfo, buffer.GCPveCityAwardMsg.RewardInfo.Builder, buffer.GCPveCityAwardMsg.RewardInfoOrBuilder> chessAwardsBuilder_;
      
      public java.util.List<buffer.GCPveCityAwardMsg.RewardInfo> getChessAwardsList() {
        if (chessAwardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(chessAwards_);
        } else {
          return chessAwardsBuilder_.getMessageList();
        }
      }
      public int getChessAwardsCount() {
        if (chessAwardsBuilder_ == null) {
          return chessAwards_.size();
        } else {
          return chessAwardsBuilder_.getCount();
        }
      }
      public buffer.GCPveCityAwardMsg.RewardInfo getChessAwards(int index) {
        if (chessAwardsBuilder_ == null) {
          return chessAwards_.get(index);
        } else {
          return chessAwardsBuilder_.getMessage(index);
        }
      }
      public Builder setChessAwards(
          int index, buffer.GCPveCityAwardMsg.RewardInfo value) {
        if (chessAwardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChessAwardsIsMutable();
          chessAwards_.set(index, value);
          onChanged();
        } else {
          chessAwardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setChessAwards(
          int index, buffer.GCPveCityAwardMsg.RewardInfo.Builder builderForValue) {
        if (chessAwardsBuilder_ == null) {
          ensureChessAwardsIsMutable();
          chessAwards_.set(index, builderForValue.build());
          onChanged();
        } else {
          chessAwardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addChessAwards(buffer.GCPveCityAwardMsg.RewardInfo value) {
        if (chessAwardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChessAwardsIsMutable();
          chessAwards_.add(value);
          onChanged();
        } else {
          chessAwardsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addChessAwards(
          int index, buffer.GCPveCityAwardMsg.RewardInfo value) {
        if (chessAwardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChessAwardsIsMutable();
          chessAwards_.add(index, value);
          onChanged();
        } else {
          chessAwardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addChessAwards(
          buffer.GCPveCityAwardMsg.RewardInfo.Builder builderForValue) {
        if (chessAwardsBuilder_ == null) {
          ensureChessAwardsIsMutable();
          chessAwards_.add(builderForValue.build());
          onChanged();
        } else {
          chessAwardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addChessAwards(
          int index, buffer.GCPveCityAwardMsg.RewardInfo.Builder builderForValue) {
        if (chessAwardsBuilder_ == null) {
          ensureChessAwardsIsMutable();
          chessAwards_.add(index, builderForValue.build());
          onChanged();
        } else {
          chessAwardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllChessAwards(
          java.lang.Iterable<? extends buffer.GCPveCityAwardMsg.RewardInfo> values) {
        if (chessAwardsBuilder_ == null) {
          ensureChessAwardsIsMutable();
          super.addAll(values, chessAwards_);
          onChanged();
        } else {
          chessAwardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearChessAwards() {
        if (chessAwardsBuilder_ == null) {
          chessAwards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          chessAwardsBuilder_.clear();
        }
        return this;
      }
      public Builder removeChessAwards(int index) {
        if (chessAwardsBuilder_ == null) {
          ensureChessAwardsIsMutable();
          chessAwards_.remove(index);
          onChanged();
        } else {
          chessAwardsBuilder_.remove(index);
        }
        return this;
      }
      public buffer.GCPveCityAwardMsg.RewardInfo.Builder getChessAwardsBuilder(
          int index) {
        return getChessAwardsFieldBuilder().getBuilder(index);
      }
      public buffer.GCPveCityAwardMsg.RewardInfoOrBuilder getChessAwardsOrBuilder(
          int index) {
        if (chessAwardsBuilder_ == null) {
          return chessAwards_.get(index);  } else {
          return chessAwardsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends buffer.GCPveCityAwardMsg.RewardInfoOrBuilder> 
           getChessAwardsOrBuilderList() {
        if (chessAwardsBuilder_ != null) {
          return chessAwardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(chessAwards_);
        }
      }
      public buffer.GCPveCityAwardMsg.RewardInfo.Builder addChessAwardsBuilder() {
        return getChessAwardsFieldBuilder().addBuilder(
            buffer.GCPveCityAwardMsg.RewardInfo.getDefaultInstance());
      }
      public buffer.GCPveCityAwardMsg.RewardInfo.Builder addChessAwardsBuilder(
          int index) {
        return getChessAwardsFieldBuilder().addBuilder(
            index, buffer.GCPveCityAwardMsg.RewardInfo.getDefaultInstance());
      }
      public java.util.List<buffer.GCPveCityAwardMsg.RewardInfo.Builder> 
           getChessAwardsBuilderList() {
        return getChessAwardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          buffer.GCPveCityAwardMsg.RewardInfo, buffer.GCPveCityAwardMsg.RewardInfo.Builder, buffer.GCPveCityAwardMsg.RewardInfoOrBuilder> 
          getChessAwardsFieldBuilder() {
        if (chessAwardsBuilder_ == null) {
          chessAwardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              buffer.GCPveCityAwardMsg.RewardInfo, buffer.GCPveCityAwardMsg.RewardInfo.Builder, buffer.GCPveCityAwardMsg.RewardInfoOrBuilder>(
                  chessAwards_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          chessAwards_ = null;
        }
        return chessAwardsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:buffer.GCPveCityAwardProto)
    }
    
    static {
      defaultInstance = new GCPveCityAwardProto(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:buffer.GCPveCityAwardProto)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_RewardInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_RewardInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_buffer_GCPveCityAwardProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_buffer_GCPveCityAwardProto_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027GCPveCityAwardMsg.proto\022\006buffer\"?\n\nRew" +
      "ardInfo\022\020\n\010itemType\030\001 \001(\005\022\016\n\006itemId\030\002 \001(" +
      "\005\022\017\n\007itemNum\030\003 \001(\005\"}\n\023GCPveCityAwardProt" +
      "o\022\025\n\007msgType\030\001 \001(\005:\0047013\022&\n\nhardAwards\030\002" +
      " \003(\0132\022.buffer.RewardInfo\022\'\n\013chessAwards\030" +
      "\003 \003(\0132\022.buffer.RewardInfo"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_buffer_RewardInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_buffer_RewardInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_RewardInfo_descriptor,
              new java.lang.String[] { "ItemType", "ItemId", "ItemNum", },
              buffer.GCPveCityAwardMsg.RewardInfo.class,
              buffer.GCPveCityAwardMsg.RewardInfo.Builder.class);
          internal_static_buffer_GCPveCityAwardProto_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_buffer_GCPveCityAwardProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_buffer_GCPveCityAwardProto_descriptor,
              new java.lang.String[] { "MsgType", "HardAwards", "ChessAwards", },
              buffer.GCPveCityAwardMsg.GCPveCityAwardProto.class,
              buffer.GCPveCityAwardMsg.GCPveCityAwardProto.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
